(function(u,s){typeof exports=="object"&&typeof module!="undefined"?s(exports,require("vue")):typeof define=="function"&&define.amd?define(["exports","vue"],s):(u=typeof globalThis!="undefined"?globalThis:u||self,s(u["vue-chessboard"]={},u.Vue))})(this,function(u,s){"use strict";var Mt=Object.defineProperty;var xt=(u,s,C)=>s in u?Mt(u,s,{enumerable:!0,configurable:!0,writable:!0,value:C}):u[s]=C;var h=(u,s,C)=>(xt(u,typeof s!="symbol"?s+"":s,C),C);const C="rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1",d="white",p="black",_={black:{k:7,q:0},white:{k:63,q:56}},F={[d]:6,[p]:1},$={[d]:0,[p]:7},v={black:{k:"k",q:"q",b:"b",n:"n",p:"p",r:"r"},white:{k:"K",q:"Q",b:"B",n:"N",p:"P",r:"R"}},f={king:"k",queen:"q",bishop:"b",knight:"n",pawn:"p",rook:"r"},j={k:"king",q:"queen",b:"bishop",n:"knight",p:"pawn",r:"rook"},H={k:[1,7,-8,9,1,-7,-8,-9],q:[1,7,-8,9,1,-7,-8,-9],b:[7,9,-7,-9],n:[6,10,15,17,-6,-10,-15,-17],p:{[d]:[-8,-16],[p]:[8,16]},r:[1,8,-1,-8]},M=[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,2,3,4,5,6,7,-1,-1,8,9,10,11,12,13,14,15,-1,-1,16,17,18,19,20,21,22,23,-1,-1,24,25,26,27,28,29,30,31,-1,-1,32,33,34,35,36,37,38,39,-1,-1,40,41,42,43,44,45,46,47,-1,-1,48,49,50,51,52,53,54,55,-1,-1,56,57,58,59,60,61,62,63,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],x=[21,22,23,24,25,26,27,28,31,32,33,34,35,36,37,38,41,42,43,44,45,46,47,48,51,52,53,54,55,56,57,58,61,62,63,64,65,66,67,68,71,72,73,74,75,76,77,78,81,82,83,84,85,86,87,88,91,92,93,94,95,96,97,98],L={n:[-21,-19,-12,-8,8,12,19,21],b:[-11,-9,9,11],r:[-10,-1,1,10],q:[-11,-10,-9,-1,1,9,10,11],k:[-11,-10,-9,-1,1,9,10,11],p:{[d]:[-11,-9],[p]:[9,11]}},B={k:[-11,-10,-9,-1,1,9,10,11],n:[-21,-19,-12,-8,8,12,19,21],p:{[d]:[11,9],[p]:[-9,-11]}},A=0,T=1,K=2,b={k:2e4,q:900,r:500,b:330,n:320,p:100,P_ISSUES:.5,LEGAL_MOVES:.1,[d]:1,[p]:-1},q=b.r*2+b.b+b.n,D=[0,0,0,0,0,0,0,0,50,50,50,50,50,50,50,50,10,10,20,30,30,20,10,10,5,5,10,25,25,10,5,5,0,0,0,20,20,0,0,0,5,-5,-10,0,0,-10,-5,5,5,10,10,-20,-20,10,10,5,0,0,0,0,0,0,0,0],G=[-50,-40,-30,-30,-30,-30,-40,-50,-40,-20,0,0,0,0,-20,-40,-30,0,10,15,15,10,0,-30,-30,5,15,20,20,15,5,-30,-30,0,15,20,20,15,0,-30,-30,5,10,15,15,10,5,-30,-40,-20,0,5,5,0,-20,-40,-50,-40,-30,-30,-30,-30,-40,-50],Z=[-20,-10,-10,-10,-10,-10,-10,-20,-10,0,0,0,0,0,0,-10,-10,0,5,10,10,5,0,-10,-10,5,5,10,10,5,5,-10,-10,0,10,10,10,10,0,-10,-10,10,10,10,10,10,10,-10,-10,5,0,0,0,0,5,-10,-20,-10,-10,-10,-10,-10,-10,-20],V=[0,0,0,0,0,0,0,0,5,10,10,10,10,10,10,5,-5,0,0,0,0,0,0,-5,-5,0,0,0,0,0,0,-5,-5,0,0,0,0,0,0,-5,-5,0,0,0,0,0,0,-5,-5,0,0,0,0,0,0,-5,0,0,0,5,5,0,0,0],O=[-20,-10,-10,-5,-5,-10,-10,-20,-10,0,0,0,0,0,0,-10,-10,0,5,5,5,5,0,-10,-5,0,5,5,5,5,0,-5,0,0,5,5,5,5,0,-5,-10,5,5,5,5,5,0,-10,-10,0,5,0,0,0,0,-10,-20,-10,-10,-5,-5,-10,-10,-20],Q=[-30,-40,-40,-50,-50,-40,-40,-30,-30,-40,-40,-50,-50,-40,-40,-30,-30,-40,-40,-50,-50,-40,-40,-30,-30,-40,-40,-50,-50,-40,-40,-30,-20,-30,-30,-40,-40,-30,-30,-20,-10,-20,-20,-20,-20,-20,-20,-10,20,20,0,0,0,0,20,20,20,30,10,0,0,10,30,20],U={[d]:{p:D,n:G,b:Z,r:V,q:O,k:Q},[p]:{p:D.slice().reverse(),n:G.slice().reverse(),b:Z.slice().reverse(),r:V.slice().reverse(),q:O.slice().reverse(),k:Q.slice().reverse()}};class z{constructor(){h(this,"list",{});h(this,"numPieces",0);h(this,"numNotPawn",0)}addPiece(e){this.list[e.index]=e,this.numPiece++,e.type!=="p"&&this.numNotPawn++}deletePiece(e){delete this.list[e.index],this.numPiece--,e.type!=="p"&&this.numNotPawn--}mapList(e){for(const t in this.list)e(this.list[t])}}class W{constructor({index:e,color:t,code:o}){h(this,"index",0);h(this,"color",d);h(this,"imgUrl","");h(this,"imgAlt","");h(this,"code","");h(this,"isSlide",!1);this.index=e,this.color=t,this.code=o,this.type=this.code.toLowerCase(),this.pieceName=j[this.type],this.isSlide=this.type===f.bishop||this.type===f.queen||this.type===f.rook}changePieceType(e){this.code=e,this.code=e,this.type=this.code.toLowerCase(),this.pieceName=j[this.type],this.isSlide=this.type===f.bishop||this.type===f.queen||this.type===f.rook}get position(){return{x:this.index%8,y:parseInt(this.index/8)}}equals(e){return e.index===this.index}}class R{constructor(e){h(this,"squares",Array(64).fill(null));h(this,"validMoves",[]);h(this,"kings",{[d]:null,[p]:null});h(this,"pieceList",{black:new z,white:new z});this.fenPosition=e||C.split(" ")[0]}getPiece(e,t=null){return e===-1?null:t?this.squares[(t-1)*8+(e-1)]:this.squares[e]}addPiece(e){this.pieceList[e.color].addPiece(e),this.squares[e.index]=e}deletePiece(e){e&&(this.pieceList[e.color].deletePiece(e),this.squares[e.index]=null)}mapColorList(e,t){this.pieceList[e].mapList(t)}clear(){this.squares=Array(64).fill(null),this.pieceList={black:new z,white:new z}}set fenPosition(e){this.clear(),e.split("/").forEach((t,o)=>{let r=0;t.split("").forEach(i=>{if(parseInt(i))r+=parseInt(i);else{const l={index:o*8+r,code:i,color:i!==i.toLowerCase()?d:p},n=new W(l);this.addPiece(n),n.type===f.king&&(this.kings[n.color]=n),r++}})})}get fenPosition(){let e="",t=0,o=0;return this.squares.forEach(r=>{r==null?(t++,o++):(e+=t?t+r.code:""+r.code,t=0,o++),o%8===0&&(e+=t?t+"/":"/",t=0,o=0)}),e}getColorNotPawnNum(e){return this.pieceList[e].numNotPawn}get pieceCount(){return this.pieceList.white.numPieces+this.pieceList.black.numPieces}}class g{constructor({piece:e,targetIndex:t,capture:o=null,enPassant:r=!1,enPassantCapture:i=!1,castling:l=0,promotion:n=null,chess:a}){h(this,"piece",null);h(this,"startIndex",0);h(this,"targetIndex",0);h(this,"capture",null);h(this,"castling",0);h(this,"enPassant",!1);h(this,"enPassantCapture",!1);h(this,"promotion",null);h(this,"score",0);this.piece=e,this.startIndex=e.index,this.targetIndex=t,this.capture=o,this.enPassant=r,this.enPassantCapture=i,this.castling=l,this.promotion=n,this.setScore(a)}get isCheck(){return this.capture&&this.capture.type===f.king}get startPosition(){return{y:parseInt(this.startIndex/8),x:this.startIndex%8}}get targetPosition(){return{y:parseInt(this.targetIndex/8),x:this.targetIndex%8}}get isTargetLastFile(){return this.piece.color===d?this.targetPosition.y===0:this.targetPosition.y===7}setScore(e){this.capture&&(this.score+=b[this.capture.type]),this.promotion&&(this.score+=b[this.promotion]),e.inAttack(this.targetIndex,this.piece.color)&&(this.score-=b[this.piece.type]),this.piece.type!==f.pawn&&e.inPawnAttack(this.targetIndex,this.piece.color)&&(this.score-=b[this.piece.type])}static generatePawnMoves(e,t,o,r=!1){const i=H[e.type][e.color].map(n=>n+e.index),l={piece:e,targetIndex:i[0],chess:t};r||this.generatePawnForward(e,t,o,i,l);for(const n of L.p[e.color]){let a=e.index;a=M[x[a]+n],a!==-1&&this.generatePawnCapture(e,t,o,i,l,n,a)}}static generatePawnForward(e,t,o,r,i){const l=F[e.color];if(!this.isIndexValid(r[0]))return[];t.getPiece(r[0])||(parseInt(r[0]/8)===$[e.color]?this.generatePromotionMoves(o,i):(o.push(new g(i)),e.position.y===l&&!t.getPiece(r[1])&&(i.targetIndex=r[1],i.enPassant=!0,o.push(new g(i)),i.enPassant=!1)))}static generatePawnCapture(e,t,o,r,i,l,n){const a=l<0?t.enPassantIndex-8:t.enPassantIndex+8,k=t.getPiece(n);if(k&&k.color!=e.color)i.targetIndex=k.index,i.capture=k,parseInt(r[0]/8)===$[e.color]?this.generatePromotionMoves(o,i):o.push(new g(i));else if(n===a){const y=t.getPiece(t.enPassantIndex);i.capture=y,i.targetIndex=a,i.enPassantCapture=!0,o.push(new g(i))}}static generatePromotionMoves(e,t){t.promotion="q",e.push(new g(t)),t.promotion="r",e.push(new g(t)),t.promotion="b",e.push(new g(t)),t.promotion="n",e.push(new g(t)),t.promotion=null}static generatePieceMoves(e,t,o,r=!1){const i=L[e.type],l={piece:e,capture:null,chess:t};for(const n of i){let a=e.index;for(a=M[x[a]+n];a!=-1;){const k=t.getPiece(a);if(k!=null){k.color!=e.color&&(l.capture=k,l.targetIndex=a,o.push(new g(l)),l.capture=null);break}if(r||(l.targetIndex=a,o.push(new g(l))),!e.isSlide)break;a=M[x[a]+n]}}e.type===f.king&&this.generateCastleMoves(e,t,o)}static generateCastleMoves(e,t,o){const r={piece:e,chess:t},i=e.index;t.castling[e.color]&2&&!t.getPiece(i+1)&&!t.getPiece(i+2)&&!t.inCheck()&&!t.inAttack(i+1,e.color)&&!t.inAttack(i+2,e.color)&&(r.castling=2,r.targetIndex=e.index+2,o.push(new g(r))),t.castling[e.color]&1&&!t.getPiece(i-1)&&!t.getPiece(i-2)&&!t.getPiece(i-3)&&!t.inCheck()&&!t.inAttack(i-1,e.color)&&!t.inAttack(i-2,e.color)&&!t.inAttack(i-3,e.color)&&(r.castling=1,r.targetIndex=e.index-2,o.push(new g(r)))}static isIndexValid(e){return e>=0&&e<=64}}const Y=1e17;class X{constructor(e){h(this,"pieceKeys",{[d]:[],[p]:[]});h(this,"castlingKeys",{[d]:[],[p]:[]});h(this,"enPassantKeys",{[d]:[],[p]:[]});h(this,"sideToMove",0);h(this,"hash",0);h(this,"pieceTypes",["p","b","n","r","q","k"]);this.chess=e;for(let t=0;t<64;t++){this.pieceKeys[d][t]={},this.pieceKeys[p][t]={};for(const o of this.pieceTypes)this.pieceKeys[d][t][o]=this.randomNumber,this.pieceKeys[p][t][o]=this.randomNumber}for(let t=0;t<4;t++)this.castlingKeys[d][t]=this.randomNumber,this.castlingKeys[p][t]=this.randomNumber;for(let t=0;t<8;t++)this.enPassantKeys[d][t]=this.randomNumber,this.enPassantKeys[p][t]=this.randomNumber;this.sideToMove=this.randomNumber}get randomNumber(){return Math.floor(Math.random()*Y)}loadMove(e){const t=e.piece,o=e.capture;if(o&&(this.hash^=this.getPieceKey(o)),e.castling&2){const i=this.chess.getPiece(_[t.color].k);this.hash^=this.getPieceKey(i),this.hash^=this.pieceKeys[i.color][i.index-2][i.type]}else if(e.castling&1){const i=this.chess.getPiece(_[t.color].q);this.hash^=this.getPieceKey(i),this.hash^=this.pieceKeys[i.color][i.index+3][i.type]}e.enPassant&&(this.hash^=this.enPassantKeys[e.targetIndex%8]),this.hash^=this.sideToMove,this.hash^=this.getPieceKey(t);const r=this.chess.getPiece(e.targetIndex);r&&(this.hash^=this.getPieceKey(r)),this.hash^=this.pieceKeys[t.color][e.targetIndex][t.type],this.chess.enPassantIndex!=0&&(this.hash^=this.enPassantKeys[this.chess.enPassantIndex%8])}getPieceKey(e){return this.pieceKeys[e.color][e.index][e.type]}loadBoard(){this.hash=this.calculate(this.chess)}calculate(){let e=0;for(const t of this.chess.board.squares)t&&(e^=this.getPieceKey(t));return this.chess.enPassantIndex&&(e^=this.enPassantKeys[this.chess.enPassantIndex%8]),this.chess.currentPlayer===p&&(e^=this.sideToMove),e^=this.castlingKeys[this.chess.castling],e}}class P{constructor(e=C){h(this,"currentPlayer",d);h(this,"castling",{[d]:0,[p]:0});h(this,"enPassantIndex",null);h(this,"halfMoveCount",0);h(this,"moveCount",1);h(this,"moves",[]);h(this,"history",[]);h(this,"hashHistory",[]);this.board=new R,this.zobrist=new X(this),this.fen=e,this.buildMoves(),this.zobrist.loadBoard()}generatePseudoLegalMoves(e=!1){const t=[];return this.board.mapColorList(this.currentPlayer,o=>{o.type===f.pawn?g.generatePawnMoves(o,this,t,e):g.generatePieceMoves(o,this,t,e)}),t}generateMoves(e){let t=this.generatePseudoLegalMoves(e==null?void 0:e.onlyCapture);const o=this.currentPlayer,r=[];for(const i of t)this.makeUglyMove(i),this.inCheck(o)||r.push(i),this.undoUglyMove();return this.inDoubleCheck()?r.filter(i=>i.piece.type===f.king):r}buildMoves(){this.moves=this.generateMoves()}getPiece(e,t=null){return this.board.getPiece(e,t)}getPieceMoves(e){return this.moves.filter(t=>t.piece.equals(e))}checkCastlingBeforeMove(e){const t=e.piece;t.type===f.king?this.castling[t.color]=0:t.type===f.rook&&(t.index===_[t.color].k?this.castling[t.color]&=1:t.index===_[t.color].q&&(this.castling[t.color]&=2))}generateHistory(e){this.history.push({move:e,castling:{[d]:this.castling[d],[p]:this.castling[p]},enPassantIndex:this.enPassantIndex,halfMoveCount:this.halfMoveCount,moveCount:this.moveCount,currentPlayer:this.currentPlayer}),this.hashHistory.push(this.zobrist.hash)}makeUglyMove(e){if(this.generateHistory(e),this.zobrist.loadMove(e),this.board.deletePiece(e.piece),this.enPassantIndex=e.enPassant?e.targetIndex:null,this.currentPlayer===p&&this.moveCount++,this.currentPlayer=this.opponentColor,this.checkCastlingBeforeMove(e),e.capture){const t=this.getPiece(e.capture.index);this.board.deletePiece(t)}if(e.piece.type===f.pawn)this.makePawnMove(e);else if(e.castling)this.makeCastlingMove(e);else{const t=e.piece;t.index=e.targetIndex,this.board.addPiece(t)}e.piece.type===f.king&&(this.board.kings[e.piece.color]=e.piece),e.piece.type===f.pawn||e.capture?this.halfMoveCount=0:this.halfMoveCount++}makeMove(e){this.makeUglyMove(e),this.buildMoves()}undoUglyMove(){if(this.history.length>0){const e=this.history.pop(),t=this.hashHistory.pop(),o=e.move,r=o.capture,i=o.piece;if(o.promotion&&i.changePieceType(v[i.color].p),this.castling=e.castling,this.enPassantIndex=e.enPassantIndex,this.halfMoveCount=e.halfMoveCount,this.moveCount=e.moveCount,this.currentPlayer=e.currentPlayer,this.zobrist.hash=t,this.board.deletePiece(i),i.index=o.startIndex,this.board.addPiece(i),r&&this.board.addPiece(r),o.castling){let n,a;o.castling&2?(n=_[i.color].k,a=n-2):o.castling&1&&(n=_[i.color].q,a=n+3);const k=this.getPiece(a);this.board.deletePiece(k),k.index=n,this.board.addPiece(k)}}}undoMove(e){this.undoUglyMove(e),this.buildMoves()}makeCastlingMove(e){const t=e.piece;if(e.castling&2){t.index+=2,this.board.addPiece(t);const o=this.getPiece(_[t.color].k);this.board.deletePiece(o),o.index-=2,this.board.addPiece(o)}else if(e.castling&1){t.index-=2,this.board.addPiece(t);const o=this.getPiece(_[t.color].q);this.board.deletePiece(o),o.index+=3,this.board.addPiece(o)}this.castling[t.color]=0}makePawnMove(e){const t=e.piece;t.index=e.targetIndex,e.promotion&&t.changePieceType(v[t.color][e.promotion]),this.board.addPiece(t)}loadGameWithFen(e){this.fen=e,this.buildMoves()}inKnightAttack(e,t,o=!1){let r=0;for(const i of B.n){let l=e;l=M[x[l]+i];const n=this.getPiece(l);if(n&&n.type===f.knight&&n.color!==t){if(!o)return!0;r++}}return o?r:!1}inPawnAttack(e,t,o=!1){const r=this.getOpponentColor(t);let i=0;for(const l of B.p[r]){let n=e;n=M[x[n]+l];const a=this.getPiece(n);if(a&&a.type===f.pawn&&a.color!==t){if(!o)return!0;i++}}return o?i:!1}inKingAttack(e,t,o=!1){let r=0;for(const i of B.k){let l=e;l=M[x[l]+i];const n=this.getPiece(l);if(n&&n.type===f.king&&n.color!==t){if(!o)return!0;r++}}return o?r:!1}inSlidingAttack(e,t,o=!1){const r=L.k;let i=0;for(const l of r){let n=e;for(n=M[x[n]+l];n!=-1&&n!=null;){const a=this.getPiece(n);if(a!=null){let k=L[a.type];if(a.isSlide&&a.color!==t&&k.includes(l)){if(!o)return!0;i++}break}n=M[x[n]+l]}}return o?i:!1}inAttack(e,t,o=!1){return o?this.inKnightAttack(e,t,o)+this.inPawnAttack(e,t,o)+this.inSlidingAttack(e,t,o)+this.inKingAttack(e,t,o):this.inKnightAttack(e,t)||this.inPawnAttack(e,t)||this.inSlidingAttack(e,t)||this.inKingAttack(e,t)}inCheck(e=this.currentPlayer){return this.inAttack(this.board.kings[e].index,e)}inDoubleCheck(e=this.currentPlayer){return this.inAttack(this.board.kings[e].index,e,!0)>1}perft(e){let t=0,o=0;const r=this.generatePseudoLegalMoves();for(const i of r){if(this.makeUglyMove(i),!this.inCheck())if(e-1>0){const l=this.perft(e-1);t+=l.count,o+=l.captures}else t++,i.capture&&o++;this.undoUglyMove()}return{count:t,captures:o}}getOpponentColor(e){return e===d?p:d}get board64Arr(){return this.board.squares}get opponentColor(){return this.currentPlayer===d?p:d}get inThreeFold(){return this.hashHistory.length?this.hashHistory.filter(e=>e===this.zobrist.hash).length>=3:!1}get inFiftyMove(){return this.halfMoveCount>=100}get gameOver(){return!this.moves.length||this.board.pieceCount===2||this.inThreeFold||this.inFiftyMove}get winner(){return this.gameOver?this.inCheck()?this.currentPlayer===d?p:d:"draw":null}set enPassant(e){if(e==="-")this.enPassantIndex=null;else{const[t,o]=e.split("");this.enPassantIndex=(parseInt(o)-1)*8+(t.charCodeAt(0)-97)}}set castlingStr(e){if(this.castling[d]=0,this.castling[p]=0,e!=="-")for(const t of e.split(""))switch(t){case"K":this.castling[d]|=2;break;case"Q":this.castling[d]|=1;break;case"k":this.castling[p]|=2;break;case"q":this.castling[p]|=1;break}}get fenTurn(){return this.currentPlayer===d?"w":"b"}get fenCastling(){let e="";return e+=this.castling[d]&2?"K":"",e+=this.castling[d]&1?"Q":"",e+=this.castling[p]&2?"k":"",e+=this.castling[p]&1?"q":"",e||"-"}get fenEnPassant(){if(this.enPassantIndex===null)return"-";{const e=this.enPassantIndex%8+97,t=8-parseInt(this.enPassantIndex/8);return`${String.fromCharCode(e)}${t}`}}set fen(e){const t=e.split(" ");this.board.fenPosition=t[0],this.currentPlayer=t[1]==="w"?d:p,this.castlingStr=t[2],this.enPassant=t[3],this.halfMoveCount=parseInt(t[4]),this.moveCount=parseInt(t[5])}get fen(){return`${this.board.fenPosition} ${this.fenTurn} ${this.fenCastling} ${this.fenEnPassant} ${this.halfMoveCount} ${this.moveCount}`}get copy(){const e=new P(this.fen);return e.history=this.history.slice(),e}}class J{constructor(e){h(this,"hashes",{});this.game=e}get hash(){return this.game.zobrist.hash}clear(){this.hashes={}}getHash(e){return e?e.zobrist.hash:this.hash}getMove(e=null){const t=this.getHash(e);return entries[t].move}getStoredHash({depth:e,alpha:t,beta:o},r=null){const i=this.getHash(r),l=this.hashes[i];return l&&e<=l.depth&&(l.type===A||l.type===K&&l.score>=o||l.type===T&&l.score<=t)?l:null}addEvaluation(e,t=null){const o=this.getHash(t);e.hash=o,this.hashes[o]=e}}class ee{constructor({type:e="normal",depth:t=1,game:o=null}){h(this,"positionCount",0);h(this,"cutOff",0);h(this,"quiesceCount",0);h(this,"transpositionNum",0);this.type=e,this.depth=t,this.game=o,this.transpositionTable=new J(o),this.bestMove=null}selectMove(e,t){const o=this.game||e;if(this.type==="random")return this.selectRandomMove(o.moves);if(this.type==="normal")return t!=null&&t.debug&&this.resetDebug(),this.bestMove=null,this.search(this.depth,Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY,o),t!=null&&t.debug&&this.logDebug(),this.bestMove}resetDebug(){this.positionCount=0,this.quiesceCount=0,this.cutOff=0,this.transpositionNum=0}logDebug(){console.log("searched position: ",this.positionCount),console.log("cut off count: ",this.cutOff),console.log("quiesce count: ",this.quiesceCount),console.log("transposition count: ",this.transpositionNum,Object.keys(this.transpositionTable.hashes).length)}selectRandomMove(e){return e[Math.floor(Math.random()*e.length)]}search(e,t,o,r,i=0){if(i>0&&r.hashHistory.includes(r.zobrist.hash))return 0;const l=this.transpositionTable.getStoredHash({depth:e,alpha:t,beta:o},r);if(l!==null)return this.transpositionNum++,i===0&&(this.bestMove=l.move),l.score;if(e===0)return this.positionCount++,this.quiesce(t,o,r);const n=r.generateMoves();if(n.length===0)return r.inCheck()?Number.NEGATIVE_INFINITY:0;let a=T,k;n.sort((y,w)=>w.score-y.score);for(const y of n){r.makeUglyMove(y);let w=this.search(e-1,-o,-t,r,i+1);if(w=-w,r.undoUglyMove(),w>=o)return this.cutOff++,this.transpositionTable.addEvaluation({depth:e,move:y,score:o,type:K},r),o;w>t&&(a=A,t=w,k=y,i===0&&(this.bestMove=k))}return this.transpositionTable.addEvaluation({depth:e,move:k,score:t,type:a},r),t}quiesce(e,t,o){this.quiesceCount++;const r=this.evaluate(o);if(r>=t)return t;e<r&&(e=r);const i=o.generateMoves({onlyCapture:!0});i.sort((l,n)=>n.score-l.score);for(const l of i){o.makeUglyMove(l);const n=-this.quiesce(-t,-e,o);if(o.undoUglyMove(),n>=t)return t;n>e&&(e=n)}return e}endGameWeight(e){return 1-Math.min(1,e*(1/q))}endGameEval(e,t,o){let r=0;const{x:i,y:l}=t.position,n=Math.max(3-i,i-4),a=Math.max(3-l,l-4);r+=n+a;const{x:y,y:w}=e.position,S=Math.abs(y-i),E=Math.abs(w-l),I=S+E;r+=14-I;const N=1-Math.min(1,o*(1/q));return r*10*N}evaluate(e){const t=this.game||e,o=t.board,r=o.kings;let i=0,l=0;const n=this.getColorMaterial(d,o),a=this.getColorMaterial(p,o);i+=n,l+=a;const k=n-o.getColorNotPawnNum(d)*b.p,y=a-o.getColorNotPawnNum(p)*b.p;return i+=this.endGameEval(r.white,r.black,k),l+=this.endGameEval(r.black,r.white,y),i+=this.getPieceWeights(d,o),l+=this.getPieceWeights(p,o),(i-l)*b[t.currentPlayer]}getColorMaterial(e,t){let o=0;return t.mapColorList(e,r=>{o+=b[r.type]}),o}getPieceWeights(e,t){let o=0;return t.mapColorList(e,r=>{o+=U[r.color][r.type][r.index]}),o}}var m=(c,e)=>{const t=c.__vccOpts||c;for(const[o,r]of e)t[o]=r;return t};const te={name:"WhiteBishop",props:{size:Number}},ie=["width","height"],se=[s.createStaticVNode('<g id="surface1"><path style="fill-rule:evenodd;fill:rgb(100%, 100%, 100%);fill-opacity:1;stroke-width:1.5;stroke-linecap:butt;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 9 36.001562 C 12.390625 35.028906 19.109375 36.43125 22.5 34.001562 C 25.890625 36.43125 32.609375 35.028906 36 36.001562 C 36 36.001562 37.648438 36.540625 39 38.001562 C 38.320312 38.970312 37.351562 38.989844 36 38.501562 C 32.609375 37.528906 25.890625 38.958594 22.5 37.501562 C 19.109375 38.958594 12.390625 37.528906 9 38.501562 C 7.648438 38.989844 6.679688 38.970312 6 38.001562 C 7.351562 36.540625 9 36.001562 9 36.001562 Z M 9 36.001562 " transform="matrix(1,0,0,1,0,0.6)"></path><path style="fill-rule:evenodd;fill:rgb(100%, 100%, 100%);fill-opacity:1;stroke-width:1.5;stroke-linecap:butt;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 15 32.001562 C 17.5 34.501562 27.5 34.501562 30 32.001562 C 30.5 30.501562 30 30.001562 30 30.001562 C 30 27.501562 27.5 26.001562 27.5 26.001562 C 33 24.501562 33.5 14.501563 22.5 10.501563 C 11.5 14.501563 12 24.501562 17.5 26.001562 C 17.5 26.001562 15 27.501562 15 30.001562 C 15 30.001562 14.5 30.501562 15 32.001562 Z M 15 32.001562 " transform="matrix(1,0,0,1,0,0.6)"></path><path style="fill-rule:evenodd;fill:rgb(100%, 100%, 100%);fill-opacity:1;stroke-width:1.5;stroke-linecap:butt;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 25 8.001563 C 25 9.380469 23.878906 10.501563 22.5 10.501563 C 21.121094 10.501563 20 9.380469 20 8.001563 C 20 6.61875 21.121094 5.501563 22.5 5.501563 C 23.878906 5.501563 25 6.61875 25 8.001563 Z M 25 8.001563 " transform="matrix(1,0,0,1,0,0.6)"></path><path style="fill:none;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:miter;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 17.5 26.001562 L 27.5 26.001562 M 15 30.001562 L 30 30.001562 M 22.5 15.501563 L 22.5 20.501562 M 20 18.001562 L 25 18.001562 " transform="matrix(1,0,0,1,0,0.6)"></path></g>',1)];function oe(c,e,t,o,r,i){return s.openBlock(),s.createElementBlock("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",width:t.size,height:t.size,viewBox:"0 0 45 45",version:"1.1"},se,8,ie)}var re=m(te,[["render",oe]]);const ne={name:"WhiteKing",props:{size:Number}},le=["width","height"],ae=[s.createStaticVNode('<g id="surface1"><path style="fill:none;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:miter;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 22.5 11.628906 L 22.5 6 "></path><path style="fill:none;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:miter;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 20 8 L 25 8 "></path><path style="fill-rule:evenodd;fill:rgb(100%, 100%, 100%);fill-opacity:1;stroke-width:1.5;stroke-linecap:butt;stroke-linejoin:miter;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 22.5 25 C 22.5 25 27 17.5 25.5 14.5 C 25.5 14.5 24.5 12 22.5 12 C 20.5 12 19.5 14.5 19.5 14.5 C 18 17.5 22.5 25 22.5 25 "></path><path style="fill-rule:evenodd;fill:rgb(100%, 100%, 100%);fill-opacity:1;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 12.5 37 C 18 40.5 27 40.5 32.5 37 L 32.5 30 C 32.5 30 41.5 25.5 38.5 19.5 C 34.5 13 25 16 22.5 23.5 L 22.5 27 L 22.5 23.5 C 20 16 10.5 13 6.5 19.5 C 3.5 25.5 12.5 30 12.5 30 L 12.5 37 "></path><path style="fill:none;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 12.5 30 C 18 27 27 27 32.5 30 "></path><path style="fill:none;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 12.5 33.5 C 18 30.5 27 30.5 32.5 33.5 "></path><path style="fill:none;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 12.5 37 C 18 34 27 34 32.5 37 "></path></g>',1)];function ce(c,e,t,o,r,i){return s.openBlock(),s.createElementBlock("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",width:t.size,height:t.size,viewBox:"0 0 45 45",version:"1.1"},ae,8,le)}var he=m(ne,[["render",ce]]);const de={name:"WhiteKnight",props:{size:Number}},pe=["width","height"],ke=[s.createStaticVNode('<g id="surface1"><path style="fill-rule:evenodd;fill:rgb(100%, 100%, 100%);fill-opacity:1;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 22 10.000781 C 32.5 11.000781 38.5 18.000781 38 39.000781 L 15 39.000781 C 15 30.000781 25 32.500781 23 18.000781 " transform="matrix(1,0,0,1,0,0.3)"></path><path style="fill-rule:evenodd;fill:rgb(100%, 100%, 100%);fill-opacity:1;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 24 18.000781 C 24.378906 20.910937 18.449219 25.371875 16 27.000781 C 13 29.000781 13.179688 31.340625 11 31.000781 C 9.957031 30.059375 12.410156 27.961719 11 28.000781 C 10 28.000781 11.191406 29.23125 10 30.000781 C 9 30.000781 5.996094 31.000781 6 26.000781 C 6 24.000781 12 14.000781 12 14.000781 C 12 14.000781 13.890625 12.098437 14 10.500781 C 13.269531 9.504687 13.5 8.500781 13.5 7.500781 C 14.5 6.500781 16.5 10.000781 16.5 10.000781 L 18.5 10.000781 C 18.5 10.000781 19.28125 8.008594 21 7.000781 C 22 7.000781 22 10.000781 22 10.000781 " transform="matrix(1,0,0,1,0,0.3)"></path><path style="fill-rule:evenodd;fill:rgb(0%, 0%, 0%);fill-opacity:1;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 9.5 25.500781 C 9.5 25.774219 9.277344 26.000781 9 26.000781 C 8.722656 26.000781 8.5 25.774219 8.5 25.500781 C 8.5 25.223437 8.722656 25.000781 9 25.000781 C 9.277344 25.000781 9.5 25.223437 9.5 25.500781 Z M 9.5 25.500781 " transform="matrix(1,0,0,1,0,0.3)"></path><path style="fill-rule:evenodd;fill:rgb(0%, 0%, 0%);fill-opacity:1;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 15.000905 15.50038 C 14.999749 16.326502 14.776004 17.001477 14.499328 16.998836 C 14.224605 16.999578 13.99872 16.327096 13.999876 15.500973 C 13.99908 14.671468 14.224777 13.999876 14.4995 13.999134 C 14.776176 14.001775 15.000108 14.670874 15.000905 15.50038 Z M 15.000905 15.50038 " transform="matrix(0.866,0.5,-0.5,0.866,9.693,-4.873)"></path></g>',1)];function fe(c,e,t,o,r,i){return s.openBlock(),s.createElementBlock("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",width:t.size,height:t.size,viewBox:"0 0 45 45",version:"1.1"},ke,8,pe)}var ue=m(de,[["render",fe]]);const ge={name:"WhitePawn",props:{size:Number}},me=["width","height"],ye=[s.createElementVNode("g",{id:"surface1"},[s.createElementVNode("path",{style:{"fill-rule":"nonzero",fill:"rgb(100%, 100%, 100%)","fill-opacity":"1","stroke-width":"1.5","stroke-linecap":"round","stroke-linejoin":"miter",stroke:"rgb(0%, 0%, 0%)","stroke-opacity":"1","stroke-miterlimit":"4"},d:"M 22.5 9 C 20.289062 9 18.5 10.789062 18.5 13 C 18.5 13.890625 18.789062 14.710938 19.28125 15.378906 C 17.328125 16.5 16 18.589844 16 21 C 16 23.03125 16.941406 24.839844 18.410156 26.03125 C 15.410156 27.089844 11 31.578125 11 39.5 L 34 39.5 C 34 31.578125 29.589844 27.089844 26.589844 26.03125 C 28.058594 24.839844 29 23.03125 29 21 C 29 18.589844 27.671875 16.5 25.71875 15.378906 C 26.210938 14.710938 26.5 13.890625 26.5 13 C 26.5 10.789062 24.710938 9 22.5 9 Z M 22.5 9 "})],-1)];function Ce(c,e,t,o,r,i){return s.openBlock(),s.createElementBlock("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",width:t.size,height:t.size,viewBox:"0 0 45 45",version:"1.1"},ye,8,me)}var be=m(ge,[["render",Ce]]);const we={name:"WhiteQueen",props:{size:Number}},_e=["width","height"],Me=[s.createStaticVNode('<g id="surface1"><path style="fill-rule:nonzero;fill:rgb(100%, 100%, 100%);fill-opacity:1;stroke-width:1.5;stroke-linecap:butt;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 9 26 C 17.5 24.5 30 24.5 36 26 L 38.5 13.5 L 31 25 L 30.699219 10.898438 L 25.5 24.5 L 22.5 10 L 19.5 24.5 L 14.300781 10.898438 L 14 25 L 6.5 13.5 Z M 9 26 "></path><path style="fill-rule:nonzero;fill:rgb(100%, 100%, 100%);fill-opacity:1;stroke-width:1.5;stroke-linecap:butt;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 9 26 C 9 28 10.5 28 11.5 30 C 12.5 31.5 12.5 31 12 33.5 C 10.5 34.5 11 36 11 36 C 9.5 37.5 11 38.5 11 38.5 C 17.5 39.5 27.5 39.5 34 38.5 C 34 38.5 35.5 37.5 34 36 C 34 36 34.5 34.5 33 33.5 C 32.5 31 32.5 31.5 33.5 30 C 34.5 28 36 28 36 26 C 27.5 24.5 17.5 24.5 9 26 Z M 9 26 "></path><path style="fill:none;stroke-width:1.5;stroke-linecap:butt;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 11.5 30 C 15 29 30 29 33.5 30 "></path><path style="fill:none;stroke-width:1.5;stroke-linecap:butt;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 12 33.5 C 18 32.5 27 32.5 33 33.5 "></path><path style="fill-rule:nonzero;fill:rgb(100%, 100%, 100%);fill-opacity:1;stroke-width:1.5;stroke-linecap:butt;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 8 12 C 8 13.105469 7.105469 14 6 14 C 4.894531 14 4 13.105469 4 12 C 4 10.894531 4.894531 10 6 10 C 7.105469 10 8 10.894531 8 12 Z M 8 12 "></path><path style="fill-rule:nonzero;fill:rgb(100%, 100%, 100%);fill-opacity:1;stroke-width:1.5;stroke-linecap:butt;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 16 9 C 16 10.105469 15.105469 11 14 11 C 12.894531 11 12 10.105469 12 9 C 12 7.894531 12.894531 7 14 7 C 15.105469 7 16 7.894531 16 9 Z M 16 9 "></path><path style="fill-rule:nonzero;fill:rgb(100%, 100%, 100%);fill-opacity:1;stroke-width:1.5;stroke-linecap:butt;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 24.5 8 C 24.5 9.105469 23.605469 10 22.5 10 C 21.394531 10 20.5 9.105469 20.5 8 C 20.5 6.894531 21.394531 6 22.5 6 C 23.605469 6 24.5 6.894531 24.5 8 Z M 24.5 8 "></path><path style="fill-rule:nonzero;fill:rgb(100%, 100%, 100%);fill-opacity:1;stroke-width:1.5;stroke-linecap:butt;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 33 9 C 33 10.105469 32.105469 11 31 11 C 29.894531 11 29 10.105469 29 9 C 29 7.894531 29.894531 7 31 7 C 32.105469 7 33 7.894531 33 9 Z M 33 9 "></path><path style="fill-rule:nonzero;fill:rgb(100%, 100%, 100%);fill-opacity:1;stroke-width:1.5;stroke-linecap:butt;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 41 12 C 41 13.105469 40.105469 14 39 14 C 37.894531 14 37 13.105469 37 12 C 37 10.894531 37.894531 10 39 10 C 40.105469 10 41 10.894531 41 12 Z M 41 12 "></path></g>',1)];function xe(c,e,t,o,r,i){return s.openBlock(),s.createElementBlock("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",width:t.size,height:t.size,viewBox:"0 0 45 45",version:"1.1"},Me,8,_e)}var Pe=m(we,[["render",xe]]);const Le={name:"WhiteRook",props:{size:Number}},ze=["width","height"],Be=[s.createStaticVNode('<g id="surface1"><path style="fill-rule:evenodd;fill:rgb(100%, 100%, 100%);fill-opacity:1;stroke-width:1.5;stroke-linecap:butt;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 9 39.000781 L 36 39.000781 L 36 36.000781 L 9 36.000781 Z M 9 39.000781 " transform="matrix(1,0,0,1,0,0.3)"></path><path style="fill-rule:evenodd;fill:rgb(100%, 100%, 100%);fill-opacity:1;stroke-width:1.5;stroke-linecap:butt;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 12 36.000781 L 12 32.000781 L 33 32.000781 L 33 36.000781 Z M 12 36.000781 " transform="matrix(1,0,0,1,0,0.3)"></path><path style="fill-rule:evenodd;fill:rgb(100%, 100%, 100%);fill-opacity:1;stroke-width:1.5;stroke-linecap:butt;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 11 14.000781 L 11 9.000781 L 15 9.000781 L 15 11.000781 L 20 11.000781 L 20 9.000781 L 25 9.000781 L 25 11.000781 L 30 11.000781 L 30 9.000781 L 34 9.000781 L 34 14.000781 " transform="matrix(1,0,0,1,0,0.3)"></path><path style="fill-rule:evenodd;fill:rgb(100%, 100%, 100%);fill-opacity:1;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 34 14.000781 L 31 17.000781 L 14 17.000781 L 11 14.000781 " transform="matrix(1,0,0,1,0,0.3)"></path><path style="fill-rule:evenodd;fill:rgb(100%, 100%, 100%);fill-opacity:1;stroke-width:1.5;stroke-linecap:butt;stroke-linejoin:miter;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 31 17.000781 L 31 29.500781 L 14 29.500781 L 14 17.000781 " transform="matrix(1,0,0,1,0,0.3)"></path><path style="fill-rule:evenodd;fill:rgb(100%, 100%, 100%);fill-opacity:1;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 31 29.500781 L 32.5 32.000781 L 12.5 32.000781 L 14 29.500781 " transform="matrix(1,0,0,1,0,0.3)"></path><path style="fill:none;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:miter;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 11 14.000781 L 34 14.000781 " transform="matrix(1,0,0,1,0,0.3)"></path></g>',1)];function Se(c,e,t,o,r,i){return s.openBlock(),s.createElementBlock("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",width:t.size,height:t.size,viewBox:"0 0 45 45",version:"1.1"},Be,8,ze)}var Ee=m(Le,[["render",Se]]);const Ie={name:"BlackBishop",props:{size:Number}},Ne=["width","height"],$e=[s.createStaticVNode('<g id="surface1"><path style="fill-rule:evenodd;fill:rgb(0%, 0%, 0%);fill-opacity:1;stroke-width:1.5;stroke-linecap:butt;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 9 36 C 12.390234 35.029687 19.109766 36.430078 22.5 33.999609 C 25.890234 36.430078 32.609766 35.029687 36 36 C 36 36 37.65 36.540234 39 38.000391 C 38.320312 38.969531 37.35 38.989453 36 38.499609 C 32.609766 37.530469 25.890234 38.960156 22.5 37.5 C 19.109766 38.960156 12.390234 37.530469 9 38.499609 C 7.65 38.989453 6.679688 38.969531 6 38.000391 C 7.35 36.540234 9 36 9 36 Z M 9 36 " transform="matrix(3.333333,0,0,3.333333,0,2)"></path><path style="fill-rule:evenodd;fill:rgb(0%, 0%, 0%);fill-opacity:1;stroke-width:1.5;stroke-linecap:butt;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 15 32.000391 C 17.499609 34.5 27.500391 34.5 30 32.000391 C 30.500391 30.500391 30 30 30 30 C 30 27.500391 27.500391 26.000391 27.500391 26.000391 C 33 24.500391 33.500391 14.499609 22.5 10.5 C 11.499609 14.499609 12 24.500391 17.499609 26.000391 C 17.499609 26.000391 15 27.500391 15 30 C 15 30 14.499609 30.500391 15 32.000391 Z M 15 32.000391 " transform="matrix(3.333333,0,0,3.333333,0,2)"></path><path style="fill-rule:evenodd;fill:rgb(0%, 0%, 0%);fill-opacity:1;stroke-width:1.5;stroke-linecap:butt;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 24.999609 8.000391 C 24.999609 9.380859 23.880469 10.5 22.5 10.5 C 21.119531 10.5 20.000391 9.380859 20.000391 8.000391 C 20.000391 6.61875 21.119531 5.499609 22.5 5.499609 C 23.880469 5.499609 24.999609 6.61875 24.999609 8.000391 Z M 24.999609 8.000391 " transform="matrix(3.333333,0,0,3.333333,0,2)"></path><path style="fill:none;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:miter;stroke:rgb(100%, 100%, 100%);stroke-opacity:1;stroke-miterlimit:4;" d="M 17.499609 26.000391 L 27.500391 26.000391 M 15 30 L 30 30 M 22.5 15.500391 L 22.5 20.499609 M 20.000391 18 L 24.999609 18 " transform="matrix(3.333333,0,0,3.333333,0,2)"></path></g>',1)];function ve(c,e,t,o,r,i){return s.openBlock(),s.createElementBlock("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",width:t.size,height:t.size,viewBox:"0 0 150 150",version:"1.1"},$e,8,Ne)}var je=m(Ie,[["render",ve]]);const Ae={name:"BlackKing",props:{size:Number}},Te=["width","height"],Ke=[s.createStaticVNode('<g id="surface1"><path style="fill:none;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:miter;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 22.5 11.628906 L 22.5 6 "></path><path style="fill-rule:evenodd;fill:rgb(0%, 0%, 0%);fill-opacity:1;stroke-width:1.5;stroke-linecap:butt;stroke-linejoin:miter;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 22.5 25 C 22.5 25 27 17.5 25.5 14.5 C 25.5 14.5 24.5 12 22.5 12 C 20.5 12 19.5 14.5 19.5 14.5 C 18 17.5 22.5 25 22.5 25 "></path><path style="fill-rule:evenodd;fill:rgb(0%, 0%, 0%);fill-opacity:1;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 12.5 37 C 18 40.5 27 40.5 32.5 37 L 32.5 30 C 32.5 30 41.5 25.5 38.5 19.5 C 34.5 13 25 16 22.5 23.5 L 22.5 27 L 22.5 23.5 C 20 16 10.5 13 6.5 19.5 C 3.5 25.5 12.5 30 12.5 30 L 12.5 37 "></path><path style="fill:none;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:miter;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 20 8 L 25 8 "></path><path style="fill:none;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(100%, 100%, 100%);stroke-opacity:1;stroke-miterlimit:4;" d="M 32 29.5 C 32 29.5 40.5 25.5 38.03125 19.851562 C 34.148438 14 25 18 22.5 24.5 L 22.5 26.601562 L 22.5 24.5 C 20 18 10.851562 14 6.96875 19.851562 C 4.5 25.5 13 29.5 13 29.5 "></path><path style="fill:none;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(100%, 100%, 100%);stroke-opacity:1;stroke-miterlimit:4;" d="M 12.5 30 C 18 27 27 27 32.5 30 M 12.5 33.5 C 18 30.5 27 30.5 32.5 33.5 M 12.5 37 C 18 34 27 34 32.5 37 "></path></g>',1)];function qe(c,e,t,o,r,i){return s.openBlock(),s.createElementBlock("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",width:t.size,height:t.size,viewBox:"0 0 45 45",version:"1.1"},Ke,8,Te)}var De=m(Ae,[["render",qe]]);const Ge={name:"BlackKnight",props:{size:Number}},Ze=["width","height"],Ve=[s.createStaticVNode('<g id="surface1"><path style="fill-rule:evenodd;fill:rgb(0%, 0%, 0%);fill-opacity:1;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 22 10.000781 C 32.5 11.000781 38.5 18.000781 38 39.000781 L 15 39.000781 C 15 30.000781 25 32.500781 23 18.000781 " transform="matrix(1,0,0,1,0,0.3)"></path><path style="fill-rule:evenodd;fill:rgb(0%, 0%, 0%);fill-opacity:1;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 24 18.000781 C 24.378906 20.910937 18.449219 25.371875 16 27.000781 C 13 29.000781 13.179688 31.340625 11 31.000781 C 9.957031 30.059375 12.410156 27.961719 11 28.000781 C 10 28.000781 11.191406 29.23125 10 30.000781 C 9 30.000781 5.996094 31.000781 6 26.000781 C 6 24.000781 12 14.000781 12 14.000781 C 12 14.000781 13.890625 12.098437 14 10.500781 C 13.269531 9.504687 13.5 8.500781 13.5 7.500781 C 14.5 6.500781 16.5 10.000781 16.5 10.000781 L 18.5 10.000781 C 18.5 10.000781 19.28125 8.008594 21 7.000781 C 22 7.000781 22 10.000781 22 10.000781 " transform="matrix(1,0,0,1,0,0.3)"></path><path style="fill-rule:evenodd;fill:rgb(100%, 100%, 100%);fill-opacity:1;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(100%, 100%, 100%);stroke-opacity:1;stroke-miterlimit:4;" d="M 9.5 25.500781 C 9.5 25.774219 9.277344 26.000781 9 26.000781 C 8.722656 26.000781 8.5 25.774219 8.5 25.500781 C 8.5 25.223437 8.722656 25.000781 9 25.000781 C 9.277344 25.000781 9.5 25.223437 9.5 25.500781 Z M 9.5 25.500781 " transform="matrix(1,0,0,1,0,0.3)"></path><path style="fill-rule:evenodd;fill:rgb(100%, 100%, 100%);fill-opacity:1;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(100%, 100%, 100%);stroke-opacity:1;stroke-miterlimit:4;" d="M 15.000905 15.50038 C 14.999749 16.326502 14.776004 17.001477 14.499328 16.998836 C 14.224605 16.999578 13.99872 16.327096 13.999876 15.500973 C 13.99908 14.671468 14.224777 13.999876 14.4995 13.999134 C 14.776176 14.001775 15.000108 14.670874 15.000905 15.50038 Z M 15.000905 15.50038 " transform="matrix(0.866,0.5,-0.5,0.866,9.693,-4.873)"></path><path style="stroke:none;fill-rule:evenodd;fill:rgb(100%, 100%, 100%);fill-opacity:1;" d="M 24.550781 10.699219 L 24.101562 12.148438 L 24.601562 12.300781 C 27.75 13.300781 30.25 14.789062 32.5 19.050781 C 34.75 23.308594 35.75 29.359375 35.25 39.300781 L 35.199219 39.800781 L 37.449219 39.800781 L 37.5 39.300781 C 38 29.238281 36.621094 22.449219 34.25 17.960938 C 31.878906 13.46875 28.460938 11.320312 25.058594 10.800781 Z M 24.550781 10.699219 "></path></g>',1)];function Oe(c,e,t,o,r,i){return s.openBlock(),s.createElementBlock("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",width:t.size,height:t.size,viewBox:"0 0 45 45",version:"1.1"},Ve,8,Ze)}var Qe=m(Ge,[["render",Oe]]);const We={name:"BlackPawn",props:{size:Number}},Fe=["width","height"],He=[s.createElementVNode("g",{id:"surface1"},[s.createElementVNode("path",{style:{"fill-rule":"nonzero",fill:"rgb(0%, 0%, 0%)","fill-opacity":"1","stroke-width":"1.5","stroke-linecap":"round","stroke-linejoin":"miter",stroke:"rgb(0%, 0%, 0%)","stroke-opacity":"1","stroke-miterlimit":"4"},d:"M 22.5 9 C 20.289062 9 18.5 10.789062 18.5 13 C 18.5 13.890625 18.789062 14.710938 19.28125 15.378906 C 17.328125 16.5 16 18.589844 16 21 C 16 23.03125 16.941406 24.839844 18.410156 26.03125 C 15.410156 27.089844 11 31.578125 11 39.5 L 34 39.5 C 34 31.578125 29.589844 27.089844 26.589844 26.03125 C 28.058594 24.839844 29 23.03125 29 21 C 29 18.589844 27.671875 16.5 25.71875 15.378906 C 26.210938 14.710938 26.5 13.890625 26.5 13 C 26.5 10.789062 24.710938 9 22.5 9 Z M 22.5 9 "})],-1)];function Ue(c,e,t,o,r,i){return s.openBlock(),s.createElementBlock("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",width:t.size,height:t.size,viewBox:"0 0 45 45",version:"1.1"},He,8,Fe)}var Re=m(We,[["render",Ue]]);const Ye={name:"BlackQueen",props:{size:Number}},Xe=["width","height"],Je=[s.createStaticVNode('<g id="surface1"><path style="fill-rule:nonzero;fill:rgb(0%, 0%, 0%);fill-opacity:1;stroke-width:1.5;stroke-linecap:butt;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 9 26 C 17.5 24.5 30 24.5 36 26 L 38.5 13.5 L 31 25 L 30.699219 10.898438 L 25.5 24.5 L 22.5 10 L 19.5 24.5 L 14.300781 10.898438 L 14 25 L 6.5 13.5 Z M 9 26 "></path><path style="fill-rule:nonzero;fill:rgb(0%, 0%, 0%);fill-opacity:1;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 9 26 C 9 28 10.5 28 11.5 30 C 12.5 31.5 12.5 31 12 33.5 C 10.5 34.5 11 36 11 36 C 9.5 37.5 11 38.5 11 38.5 C 17.5 39.5 27.5 39.5 34 38.5 C 34 38.5 35.5 37.5 34 36 C 34 36 34.5 34.5 33 33.5 C 32.5 31 32.5 31.5 33.5 30 C 34.5 28 36 28 36 26 C 27.5 24.5 17.5 24.5 9 26 Z M 9 26 "></path><path style="fill-rule:nonzero;fill:rgb(0%, 0%, 0%);fill-opacity:1;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 11.5 30 C 15 29 30 29 33.5 30 "></path><path style="fill-rule:nonzero;fill:rgb(0%, 0%, 0%);fill-opacity:1;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 12 33.5 C 18 32.5 27 32.5 33 33.5 "></path><path style="fill-rule:nonzero;fill:rgb(0%, 0%, 0%);fill-opacity:1;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 8 12 C 8 13.105469 7.105469 14 6 14 C 4.894531 14 4 13.105469 4 12 C 4 10.894531 4.894531 10 6 10 C 7.105469 10 8 10.894531 8 12 Z M 8 12 "></path><path style="fill-rule:nonzero;fill:rgb(0%, 0%, 0%);fill-opacity:1;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 16 9 C 16 10.105469 15.105469 11 14 11 C 12.894531 11 12 10.105469 12 9 C 12 7.894531 12.894531 7 14 7 C 15.105469 7 16 7.894531 16 9 Z M 16 9 "></path><path style="fill-rule:nonzero;fill:rgb(0%, 0%, 0%);fill-opacity:1;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 24.5 8 C 24.5 9.105469 23.605469 10 22.5 10 C 21.394531 10 20.5 9.105469 20.5 8 C 20.5 6.894531 21.394531 6 22.5 6 C 23.605469 6 24.5 6.894531 24.5 8 Z M 24.5 8 "></path><path style="fill-rule:nonzero;fill:rgb(0%, 0%, 0%);fill-opacity:1;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 33 9 C 33 10.105469 32.105469 11 31 11 C 29.894531 11 29 10.105469 29 9 C 29 7.894531 29.894531 7 31 7 C 32.105469 7 33 7.894531 33 9 Z M 33 9 "></path><path style="fill-rule:nonzero;fill:rgb(0%, 0%, 0%);fill-opacity:1;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 41 12 C 41 13.105469 40.105469 14 39 14 C 37.894531 14 37 13.105469 37 12 C 37 10.894531 37.894531 10 39 10 C 40.105469 10 41 10.894531 41 12 Z M 41 12 "></path><path style="fill:none;stroke-width:1.5;stroke-linecap:butt;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 11 38.5 C 18.449219 41.089844 26.550781 41.089844 34 38.5 "></path><path style="fill:none;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(100%, 100%, 100%);stroke-opacity:1;stroke-miterlimit:4;" d="M 11 29 C 18.449219 26.410156 26.550781 26.410156 34 29 "></path><path style="fill:none;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(100%, 100%, 100%);stroke-opacity:1;stroke-miterlimit:4;" d="M 12.5 31.5 L 32.5 31.5 "></path><path style="fill:none;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(100%, 100%, 100%);stroke-opacity:1;stroke-miterlimit:4;" d="M 11.5 34.5 C 18.644531 36.863281 26.355469 36.863281 33.5 34.5 "></path><path style="fill:none;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(100%, 100%, 100%);stroke-opacity:1;stroke-miterlimit:4;" d="M 10.5 37.5 C 18.25 40.328125 26.75 40.328125 34.5 37.5 "></path></g>',1)];function et(c,e,t,o,r,i){return s.openBlock(),s.createElementBlock("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",width:t.size,height:t.size,viewBox:"0 0 45 45",version:"1.1"},Je,8,Xe)}var tt=m(Ye,[["render",et]]);const it={name:"BlackRook",props:{size:Number}},st=["width","height"],ot=[s.createStaticVNode('<g id="surface1"><path style="fill-rule:evenodd;fill:rgb(0%, 0%, 0%);fill-opacity:1;stroke-width:1.5;stroke-linecap:butt;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 9 39.000781 L 36 39.000781 L 36 36.000781 L 9 36.000781 Z M 9 39.000781 " transform="matrix(1,0,0,1,0,0.3)"></path><path style="fill-rule:evenodd;fill:rgb(0%, 0%, 0%);fill-opacity:1;stroke-width:1.5;stroke-linecap:butt;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 12.5 32.000781 L 14 29.500781 L 31 29.500781 L 32.5 32.000781 Z M 12.5 32.000781 " transform="matrix(1,0,0,1,0,0.3)"></path><path style="fill-rule:evenodd;fill:rgb(0%, 0%, 0%);fill-opacity:1;stroke-width:1.5;stroke-linecap:butt;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 12 36.000781 L 12 32.000781 L 33 32.000781 L 33 36.000781 Z M 12 36.000781 " transform="matrix(1,0,0,1,0,0.3)"></path><path style="fill-rule:evenodd;fill:rgb(0%, 0%, 0%);fill-opacity:1;stroke-width:1.5;stroke-linecap:butt;stroke-linejoin:miter;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 14 29.500781 L 14 16.500781 L 31 16.500781 L 31 29.500781 Z M 14 29.500781 " transform="matrix(1,0,0,1,0,0.3)"></path><path style="fill-rule:evenodd;fill:rgb(0%, 0%, 0%);fill-opacity:1;stroke-width:1.5;stroke-linecap:butt;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 14 16.500781 L 11 14.000781 L 34 14.000781 L 31 16.500781 Z M 14 16.500781 " transform="matrix(1,0,0,1,0,0.3)"></path><path style="fill-rule:evenodd;fill:rgb(0%, 0%, 0%);fill-opacity:1;stroke-width:1.5;stroke-linecap:butt;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 11 14.000781 L 11 9.000781 L 15 9.000781 L 15 11.000781 L 20 11.000781 L 20 9.000781 L 25 9.000781 L 25 11.000781 L 30 11.000781 L 30 9.000781 L 34 9.000781 L 34 14.000781 Z M 11 14.000781 " transform="matrix(1,0,0,1,0,0.3)"></path><path style="fill:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:miter;stroke:rgb(100%, 100%, 100%);stroke-opacity:1;stroke-miterlimit:4;" d="M 12 35.500781 L 33 35.500781 " transform="matrix(1,0,0,1,0,0.3)"></path><path style="fill:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:miter;stroke:rgb(100%, 100%, 100%);stroke-opacity:1;stroke-miterlimit:4;" d="M 13 31.500781 L 32 31.500781 " transform="matrix(1,0,0,1,0,0.3)"></path><path style="fill:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:miter;stroke:rgb(100%, 100%, 100%);stroke-opacity:1;stroke-miterlimit:4;" d="M 14 29.500781 L 31 29.500781 " transform="matrix(1,0,0,1,0,0.3)"></path><path style="fill:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:miter;stroke:rgb(100%, 100%, 100%);stroke-opacity:1;stroke-miterlimit:4;" d="M 14 16.500781 L 31 16.500781 " transform="matrix(1,0,0,1,0,0.3)"></path><path style="fill:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:miter;stroke:rgb(100%, 100%, 100%);stroke-opacity:1;stroke-miterlimit:4;" d="M 11 14.000781 L 34 14.000781 " transform="matrix(1,0,0,1,0,0.3)"></path></g>',1)];function rt(c,e,t,o,r,i){return s.openBlock(),s.createElementBlock("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",width:t.size,height:t.size,viewBox:"0 0 45 45",version:"1.1"},ot,8,st)}var nt=m(it,[["render",rt]]);const lt={name:"ChessPiece",components:{WhiteBishop:re,WhiteKing:he,WhiteKnight:ue,WhitePawn:be,WhiteQueen:Pe,WhiteRook:Ee,BlackBishop:je,BlackKing:De,BlackKnight:Qe,BlackPawn:Re,BlackQueen:tt,BlackRook:nt},props:{piece:W,size:Number},computed:{pieceName(){return this.piece.color+"/"+this.piece.pieceName},pieceSize(){return this.size*.11}}};function at(c,e,t,o,r,i){const l=s.resolveComponent("white-bishop"),n=s.resolveComponent("white-king"),a=s.resolveComponent("white-knight"),k=s.resolveComponent("white-pawn"),y=s.resolveComponent("white-queen"),w=s.resolveComponent("white-rook"),S=s.resolveComponent("black-bishop"),E=s.resolveComponent("black-king"),I=s.resolveComponent("black-knight"),N=s.resolveComponent("black-pawn"),wt=s.resolveComponent("black-queen"),_t=s.resolveComponent("black-rook");return i.pieceName==="white/bishop"?(s.openBlock(),s.createBlock(l,{key:0,size:i.pieceSize},null,8,["size"])):i.pieceName==="white/king"?(s.openBlock(),s.createBlock(n,{key:1,size:i.pieceSize},null,8,["size"])):i.pieceName==="white/knight"?(s.openBlock(),s.createBlock(a,{key:2,size:i.pieceSize},null,8,["size"])):i.pieceName==="white/pawn"?(s.openBlock(),s.createBlock(k,{key:3,size:i.pieceSize},null,8,["size"])):i.pieceName==="white/queen"?(s.openBlock(),s.createBlock(y,{key:4,size:i.pieceSize},null,8,["size"])):i.pieceName==="white/rook"?(s.openBlock(),s.createBlock(w,{key:5,size:i.pieceSize},null,8,["size"])):i.pieceName==="black/bishop"?(s.openBlock(),s.createBlock(S,{key:6,size:i.pieceSize},null,8,["size"])):i.pieceName==="black/king"?(s.openBlock(),s.createBlock(E,{key:7,size:i.pieceSize},null,8,["size"])):i.pieceName==="black/knight"?(s.openBlock(),s.createBlock(I,{key:8,size:i.pieceSize},null,8,["size"])):i.pieceName==="black/pawn"?(s.openBlock(),s.createBlock(N,{key:9,size:i.pieceSize},null,8,["size"])):i.pieceName==="black/queen"?(s.openBlock(),s.createBlock(wt,{key:10,size:i.pieceSize},null,8,["size"])):i.pieceName==="black/rook"?(s.openBlock(),s.createBlock(_t,{key:11,size:i.pieceSize},null,8,["size"])):s.createCommentVNode("",!0)}var ct=m(lt,[["render",at]]),qt="";const ht={name:"Board",data(){return{render:!1}},props:{size:Number,game:P,isActivePiece:Function},emits:["selectPiece","isActivePiece"],watch:{"game.fen":{handler(){this.render=!this.render}}},methods:{getPiece(c,e){return this.game.getPiece(c,e)}},components:{ChessPiece:ct}},dt=["onClick"],pt={class:"board-positions"},kt={class:"board-positions letter"};function ft(c,e,t,o,r,i){const l=s.resolveComponent("chess-piece");return s.openBlock(),s.createElementBlock(s.Fragment,null,[(s.openBlock(),s.createElementBlock(s.Fragment,null,s.renderList(8,n=>(s.openBlock(),s.createElementBlock(s.Fragment,{key:n},[(s.openBlock(),s.createElementBlock(s.Fragment,null,s.renderList(8,a=>s.createElementVNode("div",{key:a,class:s.normalizeClass(["square",a%2===n%2?"light-square":"dark-square"])},[i.getPiece(a,n)?(s.openBlock(),s.createElementBlock("div",{key:0,class:s.normalizeClass(t.isActivePiece(i.getPiece(a,n))?"piece active-piece":"piece"),onClick:k=>c.$emit("selectPiece",i.getPiece(a,n))},[s.createVNode(l,{size:t.size,piece:i.getPiece(a,n)},null,8,["size","piece"])],10,dt)):s.createCommentVNode("",!0)],2)),64))],64))),64)),s.createElementVNode("div",pt,[(s.openBlock(),s.createElementBlock(s.Fragment,null,s.renderList(8,n=>s.createElementVNode("div",{key:n,class:s.normalizeClass(["number no-select",n%2===1?"dark":"light"]),style:s.normalizeStyle({fontSize:`${t.size*.02}px`})},s.toDisplayString(9-n),7)),64))]),s.createElementVNode("div",kt,[(s.openBlock(),s.createElementBlock(s.Fragment,null,s.renderList(8,n=>s.createElementVNode("div",{key:n,class:s.normalizeClass(["letters no-select",n%2===0?"dark":"light"]),style:s.normalizeStyle({fontSize:`${t.size*.02}px`})},s.toDisplayString(String.fromCharCode(96+n)),7)),64))])],64)}var ut=m(ht,[["render",ft],["__scopeId","data-v-8ab6142e"]]),Dt="";const gt={name:"ChessBoard",data(){return{defaultGame:new P,validMoves:[],selectedPiece:null,render:!1}},props:{fen:{type:String,default:C},size:{type:Number,default:800},game:{type:P},disableWhiteMoves:{type:Boolean,default:!1},disableBlackMoves:{type:Boolean,default:!1}},emits:["onMovePlayed","onGameOver","update:fen"],components:{BoardGround:ut},computed:{chessGame(){return this.game||this.defaultGame}},watch:{fen(c){this.chessGame.fen!==c&&this.chessGame.loadGameWithFen(c||C)},"chessGame.fen":{handler(c){this.$emit("update:fen",c),this.chessGame.gameOver&&this.$emit("onGameOver",{winner:this.chessGame.winner,game:this.chessGame})}},game(){this.selectedPiece=null,this.validMoves=[],this.defaultGame=new P}},created(){this.chessGame.loadGameWithFen(this.fen||C)},methods:{isActivePiece(c){return this.chessGame.gameOver||this.disableWhiteMoves&&this.chessGame.currentPlayer===d||this.disableBlackMoves&&this.chessGame.currentPlayer===p?!1:c&&c.color===this.chessGame.currentPlayer},selectPiece(c){!this.isActivePiece(c)||this.chessGame.gameOver||(this.selectedPiece=c,this.validMoves=this.chessGame.getPieceMoves(c))},makeMove(c){this.validMoves=[],this.selectedPiece=null,this.$emit("onMovePlayed",{move:c,game:this.chessGame})},getMoveStyle(c){return c.promotion&&c.promotion!=="q"?{display:"none"}:{transform:`translate(${c.targetPosition.x*100}%,${c.targetPosition.y*100}% `}}}},mt={class:"board-positions valid-moves"},yt=["onClick"];function Ct(c,e,t,o,r,i){const l=s.resolveComponent("board-ground");return s.openBlock(),s.createElementBlock("div",null,[s.createElementVNode("div",{class:"board",style:s.normalizeStyle({width:`${t.size}px`,height:`${t.size}px`})},[s.createVNode(l,{game:i.chessGame,size:t.size,onSelectPiece:i.selectPiece,isActivePiece:i.isActivePiece},null,8,["game","size","onSelectPiece","isActivePiece"]),s.createElementVNode("div",mt,[(s.openBlock(!0),s.createElementBlock(s.Fragment,null,s.renderList(r.validMoves,(n,a)=>(s.openBlock(),s.createElementBlock("div",{key:a,class:"valid-move",style:s.normalizeStyle(i.getMoveStyle(n)),onClick:k=>i.makeMove(n)},null,12,yt))),128))])],4)])}var bt=m(gt,[["render",Ct],["__scopeId","data-v-843d543c"]]);u.ChessAI=ee,u.ChessBoard=bt,u.ChessGame=P,Object.defineProperties(u,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});
