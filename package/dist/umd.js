(function(_,o){typeof exports=="object"&&typeof module!="undefined"?o(exports,require("vue")):typeof define=="function"&&define.amd?define(["exports","vue"],o):(_=typeof globalThis!="undefined"?globalThis:_||self,o(_["vue-chessboard"]={},_.Vue))})(this,function(_,o){"use strict";const N="rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1",X="white",J="black";var tt=Object.defineProperty,et=(a,t,e)=>t in a?tt(a,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):a[t]=e,h=(a,t,e)=>(et(a,typeof t!="symbol"?t+"":t,e),e);const K="rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1",d="white",p="black",y=2,b=1,I=["a","b","c","d","e","f","g","h"],M={black:{k:7,q:0},white:{k:63,q:56}},it={[d]:6,[p]:1},T={[d]:0,[p]:7},A={black:{k:"k",q:"q",b:"b",n:"n",p:"p",r:"r"},white:{k:"K",q:"Q",b:"B",n:"N",p:"P",r:"R"}},f={king:"k",queen:"q",bishop:"b",knight:"n",pawn:"p",rook:"r"},G={k:"king",q:"queen",b:"bishop",n:"knight",p:"pawn",r:"rook"},st={k:[1,7,-8,9,1,-7,-8,-9],q:[1,7,-8,9,1,-7,-8,-9],b:[7,9,-7,-9],n:[6,10,15,17,-6,-10,-15,-17],p:{[d]:[-8,-16],[p]:[8,16]},r:[1,8,-1,-8]},P=[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,2,3,4,5,6,7,-1,-1,8,9,10,11,12,13,14,15,-1,-1,16,17,18,19,20,21,22,23,-1,-1,24,25,26,27,28,29,30,31,-1,-1,32,33,34,35,36,37,38,39,-1,-1,40,41,42,43,44,45,46,47,-1,-1,48,49,50,51,52,53,54,55,-1,-1,56,57,58,59,60,61,62,63,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],x=[21,22,23,24,25,26,27,28,31,32,33,34,35,36,37,38,41,42,43,44,45,46,47,48,51,52,53,54,55,56,57,58,61,62,63,64,65,66,67,68,71,72,73,74,75,76,77,78,81,82,83,84,85,86,87,88,91,92,93,94,95,96,97,98],B={n:[-21,-19,-12,-8,8,12,19,21],b:[-11,-9,9,11],r:[-10,-1,1,10],q:[-11,-10,-9,-1,1,9,10,11],k:[-11,-10,-9,-1,1,9,10,11],p:{[d]:[-11,-9],[p]:[9,11]}},S={k:[-11,-10,-9,-1,1,9,10,11],n:[-21,-19,-12,-8,8,12,19,21],p:{[d]:[11,9],[p]:[-9,-11]}},F=0,Z=1,V=2,w={k:2e4,q:900,r:500,b:330,n:320,p:100,P_ISSUES:.5,LEGAL_MOVES:.1,[d]:1,[p]:-1},O=w.r*2+w.b+w.n,W=[0,0,0,0,0,0,0,0,50,50,50,50,50,50,50,50,10,10,20,30,30,20,10,10,5,5,10,25,25,10,5,5,0,0,0,20,20,0,0,0,5,-5,-10,0,0,-10,-5,5,5,10,10,-20,-20,10,10,5,0,0,0,0,0,0,0,0],U=[-50,-40,-30,-30,-30,-30,-40,-50,-40,-20,0,0,0,0,-20,-40,-30,0,10,15,15,10,0,-30,-30,5,15,20,20,15,5,-30,-30,0,15,20,20,15,0,-30,-30,5,10,15,15,10,5,-30,-40,-20,0,5,5,0,-20,-40,-50,-40,-30,-30,-30,-30,-40,-50],H=[-20,-10,-10,-10,-10,-10,-10,-20,-10,0,0,0,0,0,0,-10,-10,0,5,10,10,5,0,-10,-10,5,5,10,10,5,5,-10,-10,0,10,10,10,10,0,-10,-10,10,10,10,10,10,10,-10,-10,5,0,0,0,0,5,-10,-20,-10,-10,-10,-10,-10,-10,-20],D=[0,0,0,0,0,0,0,0,5,10,10,10,10,10,10,5,-5,0,0,0,0,0,0,-5,-5,0,0,0,0,0,0,-5,-5,0,0,0,0,0,0,-5,-5,0,0,0,0,0,0,-5,-5,0,0,0,0,0,0,-5,0,0,0,5,5,0,0,0],Q=[-20,-10,-10,-5,-5,-10,-10,-20,-10,0,0,0,0,0,0,-10,-10,0,5,5,5,5,0,-10,-5,0,5,5,5,5,0,-5,0,0,5,5,5,5,0,-5,-10,5,5,5,5,5,0,-10,-10,0,5,0,0,0,0,-10,-20,-10,-10,-5,-5,-10,-10,-20],R=[-30,-40,-40,-50,-50,-40,-40,-30,-30,-40,-40,-50,-50,-40,-40,-30,-30,-40,-40,-50,-50,-40,-40,-30,-30,-40,-40,-50,-50,-40,-40,-30,-20,-30,-30,-40,-40,-30,-30,-20,-10,-20,-20,-20,-20,-20,-20,-10,20,20,0,0,0,0,20,20,20,30,10,0,0,10,30,20],Y=[-50,-40,-30,-20,-20,-30,-40,-50,-30,-20,-10,0,0,-10,-20,-30,-30,-10,20,30,30,20,-10,-30,-30,-10,30,40,40,30,-10,-30,-30,-10,30,40,40,30,-10,-30,-30,-10,20,30,30,20,-10,-30,-30,-30,0,0,0,0,-30,-30,-50,-30,-30,-30,-30,-30,-30,-50],$={[d]:{p:W,n:U,b:H,r:D,q:Q,k:{middle:R,end:Y}},[p]:{p:W.slice().reverse(),n:U.slice().reverse(),b:H.slice().reverse(),r:D.slice().reverse(),q:Q.slice().reverse(),k:{middle:R.slice().reverse(),end:Y.slice().reverse()}}};class v{constructor(){h(this,"list",{}),h(this,"numPieces",0),h(this,"numNotPawn",0)}addPiece(t){this.list[t.index]=t,this.numPiece++,t.type!=="p"&&this.numNotPawn++}deletePiece(t){delete this.list[t.index],this.numPiece--,t.type!=="p"&&this.numNotPawn--}mapList(t){for(const e in this.list)t(this.list[e])}}class ot{constructor({index:t,color:e,code:s}){h(this,"index",0),h(this,"color",d),h(this,"imgUrl",""),h(this,"imgAlt",""),h(this,"code",""),h(this,"isSlide",!1),this.index=t,this.color=e,this.code=s,this.type=this.code.toLowerCase(),this.pieceName=G[this.type],this.isSlide=this.type===f.bishop||this.type===f.queen||this.type===f.rook}changePieceType(t){this.code=t,this.code=t,this.type=this.code.toLowerCase(),this.pieceName=G[this.type],this.isSlide=this.type===f.bishop||this.type===f.queen||this.type===f.rook}get position(){return{x:this.index%8,y:parseInt(this.index/8)}}equals(t){return t.index===this.index}}class rt{constructor(t){h(this,"squares",Array(64).fill(null)),h(this,"validMoves",[]),h(this,"kings",{[d]:null,[p]:null}),h(this,"pieceList",{black:new v,white:new v}),this.fenPosition=t||K.split(" ")[0]}getPiece(t,e=null){return t===-1?null:e?this.squares[(e-1)*8+(t-1)]:this.squares[t]}addPiece(t){this.pieceList[t.color].addPiece(t),this.squares[t.index]=t}deletePiece(t){t&&(this.pieceList[t.color].deletePiece(t),this.squares[t.index]=null)}mapColorList(t,e){this.pieceList[t].mapList(e)}clear(){this.squares=Array(64).fill(null),this.pieceList={black:new v,white:new v}}set fenPosition(t){this.clear(),t.split("/").forEach((e,s)=>{let r=0;e.split("").forEach(i=>{if(parseInt(i))r+=parseInt(i);else{const l={index:s*8+r,code:i,color:i!==i.toLowerCase()?d:p},n=new ot(l);this.addPiece(n),n.type===f.king&&(this.kings[n.color]=n),r++}})})}get fenPosition(){let t="",e=0,s=0;return this.squares.forEach(r=>{r==null?(e++,s++):(t+=e?e+r.code:""+r.code,e=0,s++),s%8===0&&(t+=e?e+"/":"/",e=0,s=0)}),t}getColorNotPawnNum(t){return this.pieceList[t].numNotPawn}get pieceCount(){return this.pieceList.white.numPieces+this.pieceList.black.numPieces}}class u{constructor({piece:t,targetIndex:e,capture:s=null,enPassant:r=!1,enPassantCapture:i=!1,castling:l=0,promotion:n=null,chess:c}){h(this,"piece",null),h(this,"startIndex",0),h(this,"targetIndex",0),h(this,"capture",null),h(this,"castling",0),h(this,"enPassant",!1),h(this,"enPassantCapture",!1),h(this,"promotion",null),h(this,"score",0),this.piece=t,this.startIndex=t.index,this.targetIndex=e,this.capture=s,this.enPassant=r,this.enPassantCapture=i,this.castling=l,this.promotion=n,this.setScore(c)}get isCheck(){return this.capture&&this.capture.type===f.king}indexToPosition(t){return{y:parseInt(t/8),x:t%8}}indexToString(t){return""+I[t%8]+(8-parseInt(t/8))}get startPosition(){return this.indexToPosition(this.startIndex)}get targetPosition(){return this.indexToPosition(this.targetIndex)}get startString(){return this.indexToString(this.startIndex)}get targetString(){return this.indexToString(this.targetIndex)}get isTargetLastFile(){return this.piece.color===d?this.targetPosition.y===0:this.targetPosition.y===7}get pretty(){let t=!1;return this.castling&y?t="king-side":this.castling&b&&(t="queen-side"),{san:this.san,piece:this.piece.type,from:this.startString,to:this.targetString,castling:t,capture:this.capture?this.capture.type:null,promotion:this.promotion,enPassant:this.enPassant}}getSanConflict(t){let e="";const s=this.startPosition;let r=!1,i=!1;for(const l of t)if(l.piece.type===this.piece.type&&l.startIndex!==this.startIndex&&l.targetIndex===this.targetIndex&&(s.x===l.startPosition.x&&(r=!0),s.y===l.startPosition.y&&(i=!0),r&&i))break;return i&&(e+=I[s.x]),r&&(e+=8-s.y),e}setSAN(t){this.san="",this.castling===y?this.san="o-o":this.castling===b?this.san="o-o-o":(this.piece.type!==f.pawn&&(this.san+=this.piece.type.toUpperCase(),this.san+=this.getSanConflict(t)),this.capture&&(this.piece.type===f.pawn&&(this.san+=I[this.startPosition.x]),this.san+="x"),this.san+=this.targetString,this.promotion&&(this.san+="="+this.promotion.toUpperCase()))}setScore(t){this.capture&&(this.score+=w[this.capture.type]),this.promotion&&(this.score+=w[this.promotion]),t.inAttack(this.targetIndex,this.piece.color)&&(this.score-=w[this.piece.type]),this.piece.type!==f.pawn&&t.inPawnAttack(this.targetIndex,this.piece.color)&&(this.score-=w[this.piece.type])}static generatePawnMoves(t,e,s,r=!1){const i=st[t.type][t.color].map(n=>n+t.index),l={piece:t,targetIndex:i[0],chess:e};r||this.generatePawnForward(t,e,s,i,l);for(const n of B.p[t.color]){let c=t.index;c=P[x[c]+n],c!==-1&&this.generatePawnCapture(t,e,s,i,l,n,c)}}static generatePawnForward(t,e,s,r,i){const l=it[t.color];if(!this.isIndexValid(r[0]))return[];e.getPiece(r[0])||(parseInt(r[0]/8)===T[t.color]?this.generatePromotionMoves(s,i):(s.push(new u(i)),t.position.y===l&&!e.getPiece(r[1])&&(i.targetIndex=r[1],i.enPassant=!0,s.push(new u(i)),i.enPassant=!1)))}static generatePawnCapture(t,e,s,r,i,l,n){const c=l<0?e.enPassantIndex-8:e.enPassantIndex+8,k=e.getPiece(n);if(k&&k.color!=t.color)i.targetIndex=k.index,i.capture=k,parseInt(r[0]/8)===T[t.color]?this.generatePromotionMoves(s,i):s.push(new u(i));else if(n===c){const m=e.getPiece(e.enPassantIndex);i.capture=m,i.targetIndex=c,s.push(new u(i))}}static generatePromotionMoves(t,e){e.promotion="q",t.push(new u(e)),e.promotion="r",t.push(new u(e)),e.promotion="b",t.push(new u(e)),e.promotion="n",t.push(new u(e)),e.promotion=null}static generatePieceMoves(t,e,s,r=!1){const i=B[t.type],l={piece:t,capture:null,chess:e};for(const n of i){let c=t.index;for(c=P[x[c]+n];c!=-1;){const k=e.getPiece(c);if(k!=null){k.color!=t.color&&(l.capture=k,l.targetIndex=c,s.push(new u(l)),l.capture=null);break}if(r||(l.targetIndex=c,s.push(new u(l))),!t.isSlide)break;c=P[x[c]+n]}}t.type===f.king&&this.generateCastleMoves(t,e,s)}static generateCastleMoves(t,e,s){const r={piece:t,chess:e},i=t.index;e.castling[t.color]&y&&!e.getPiece(i+1)&&!e.getPiece(i+2)&&!e.inCheck()&&!e.inAttack(i+1,t.color)&&!e.inAttack(i+2,t.color)&&(r.castling=y,r.targetIndex=t.index+2,s.push(new u(r))),e.castling[t.color]&b&&!e.getPiece(i-1)&&!e.getPiece(i-2)&&!e.getPiece(i-3)&&!e.inCheck()&&!e.inAttack(i-1,t.color)&&!e.inAttack(i-2,t.color)&&!e.inAttack(i-3,t.color)&&(r.castling=b,r.targetIndex=t.index-2,s.push(new u(r)))}static isIndexValid(t){return t>=0&&t<=64}}const nt=1e17;class lt{constructor(t){h(this,"pieceKeys",{[d]:[],[p]:[]}),h(this,"castlingKeys",{[d]:[],[p]:[]}),h(this,"enPassantKeys",{[d]:[],[p]:[]}),h(this,"sideToMove",0),h(this,"hash",0),h(this,"pieceTypes",["p","b","n","r","q","k"]),this.chess=t;for(let e=0;e<64;e++){this.pieceKeys[d][e]={},this.pieceKeys[p][e]={};for(const s of this.pieceTypes)this.pieceKeys[d][e][s]=this.randomNumber,this.pieceKeys[p][e][s]=this.randomNumber}for(let e=0;e<4;e++)this.castlingKeys[d][e]=this.randomNumber,this.castlingKeys[p][e]=this.randomNumber;for(let e=0;e<8;e++)this.enPassantKeys[d][e]=this.randomNumber,this.enPassantKeys[p][e]=this.randomNumber;this.sideToMove=this.randomNumber}get randomNumber(){return Math.floor(Math.random()*nt)}loadMove(t){const e=t.piece,s=t.capture;if(s&&(this.hash^=this.getPieceKey(s)),t.castling&y){const i=this.chess.getPiece(M[e.color].k);this.hash^=this.getPieceKey(i),this.hash^=this.pieceKeys[i.color][i.index-2][i.type]}else if(t.castling&b){const i=this.chess.getPiece(M[e.color].q);this.hash^=this.getPieceKey(i),this.hash^=this.pieceKeys[i.color][i.index+3][i.type]}t.enPassant&&(this.hash^=this.enPassantKeys[t.targetIndex%8]),this.hash^=this.sideToMove,this.hash^=this.getPieceKey(e);const r=this.chess.getPiece(t.targetIndex);r&&(this.hash^=this.getPieceKey(r)),this.hash^=this.pieceKeys[e.color][t.targetIndex][e.type],this.chess.enPassantIndex!=0&&(this.hash^=this.enPassantKeys[this.chess.enPassantIndex%8])}getPieceKey(t){return this.pieceKeys[t.color][t.index][t.type]}loadBoard(){this.hash=this.calculate(this.chess)}calculate(){let t=0;for(const e of this.chess.board.squares)e&&(t^=this.getPieceKey(e));return this.chess.enPassantIndex&&(t^=this.enPassantKeys[this.chess.enPassantIndex%8]),this.chess.currentPlayer===p&&(t^=this.sideToMove),t^=this.castlingKeys[this.chess.castling],t}}class L{constructor(t=K){h(this,"currentPlayer",d),h(this,"castling",{[d]:0,[p]:0}),h(this,"enPassantIndex",null),h(this,"halfMoveCount",0),h(this,"moveCount",1),h(this,"moves",[]),h(this,"uglyMoves",[]),h(this,"history",[]),h(this,"redoHistory",[]),h(this,"hashHistory",[]),this.board=new rt,this.zobrist=new lt(this),this.fen=t,this.buildMoves(),this.zobrist.loadBoard()}generatePseudoLegalMoves(t=!1){const e=[];return this.board.mapColorList(this.currentPlayer,s=>{s.type===f.pawn?u.generatePawnMoves(s,this,e,t):u.generatePieceMoves(s,this,e,t)}),e}generateMoves(t){let e=this.generatePseudoLegalMoves(t==null?void 0:t.onlyCapture);const s=this.currentPlayer,r=[];for(const i of e)this.makeUglyMove(i),this.inCheck(s)||r.push(i),this.undoUglyMove();return this.inDoubleCheck()?r.filter(i=>i.piece.type===f.king):r}buildMoves(){this.uglyMoves=this.generateMoves(),this.uglyMoves.forEach(t=>t.setSAN(this.uglyMoves)),this.moves=this.uglyMoves.map(t=>t.pretty)}getPiece(t,e=null){return this.board.getPiece(t,e)}getPieceMoves(t){return this.uglyMoves.filter(e=>e.piece.equals(t))}checkCastlingBeforeMove(t){const e=t.piece;e.type===f.king?this.castling[e.color]=0:e.type===f.rook&&(e.index===M[e.color].k?this.castling[e.color]&=b:e.index===M[e.color].q&&(this.castling[e.color]&=y))}generateHistory(t){this.history.push({move:t,castling:{[d]:this.castling[d],[p]:this.castling[p]},enPassantIndex:this.enPassantIndex,halfMoveCount:this.halfMoveCount,moveCount:this.moveCount,currentPlayer:this.currentPlayer}),this.hashHistory.push(this.zobrist.hash)}makeUglyMove(t){if(this.generateHistory(t),this.zobrist.loadMove(t),this.board.deletePiece(t.piece),this.enPassantIndex=t.enPassant?t.targetIndex:null,this.currentPlayer===p&&this.moveCount++,this.currentPlayer=this.opponentColor,this.checkCastlingBeforeMove(t),t.capture){const e=this.getPiece(t.capture.index);this.board.deletePiece(e)}if(t.piece.type===f.pawn)this.makePawnMove(t);else if(t.castling)this.makeCastlingMove(t);else{const e=t.piece;e.index=t.targetIndex,this.board.addPiece(e)}t.piece.type===f.king&&(this.board.kings[t.piece.color]=t.piece),t.piece.type===f.pawn||t.capture?this.halfMoveCount=0:this.halfMoveCount++}convertToMove(t){let e=!1;return(t==null?void 0:t.startIndex)&&(t==null?void 0:t.targetIndex)?e=t:typeof t=="string"?e=this.uglyMoves.find(s=>s.san===t):e=this.uglyMoves.find(s=>{if((t==null?void 0:t.from)===s.startString&&(t==null?void 0:t.to)===s.targetString)return s.promotion?s.promotion===t.promotion:!0}),e}validateMove(t){return!!this.convertToMove(t)}makeMove(t){return this.validateMove(t)?(this.makeUglyMove(this.convertToMove(t)),this.redoHistory=[],this.buildMoves(),!0):!1}undoUglyMove(){if(this.history.length>0){const t=this.history.pop(),e=this.hashHistory.pop(),s=t.move,r=s.capture,i=s.piece;if(s.promotion&&i.changePieceType(A[i.color].p),this.castling=t.castling,this.enPassantIndex=t.enPassantIndex,this.halfMoveCount=t.halfMoveCount,this.moveCount=t.moveCount,this.currentPlayer=t.currentPlayer,this.zobrist.hash=e,this.board.deletePiece(i),i.index=s.startIndex,this.board.addPiece(i),r&&this.board.addPiece(r),s.castling){let n,c;s.castling&y?(n=M[i.color].k,c=n-2):s.castling&b&&(n=M[i.color].q,c=n+3);const k=this.getPiece(c);this.board.deletePiece(k),k.index=n,this.board.addPiece(k)}}}undoMove(){this.redoHistory.push(this.history[this.history.length-1]),this.undoUglyMove(),this.buildMoves()}redoMove(){if(this.redoHistory.length>0){const t=this.redoHistory.pop();this.makeUglyMove(t.move),this.buildMoves()}}makeCastlingMove(t){const e=t.piece;if(t.castling&y){e.index+=2,this.board.addPiece(e);const s=this.getPiece(M[e.color].k);this.board.deletePiece(s),s.index-=2,this.board.addPiece(s)}else if(t.castling&b){e.index-=2,this.board.addPiece(e);const s=this.getPiece(M[e.color].q);this.board.deletePiece(s),s.index+=3,this.board.addPiece(s)}this.castling[e.color]=0}makePawnMove(t){const e=t.piece;e.index=t.targetIndex,t.promotion&&e.changePieceType(A[e.color][t.promotion]),this.board.addPiece(e)}loadGameWithFen(t){this.fen=t,this.buildMoves()}inKnightAttack(t,e,s=!1){let r=0;for(const i of S.n){let l=t;l=P[x[l]+i];const n=this.getPiece(l);if(n&&n.type===f.knight&&n.color!==e){if(!s)return!0;r++}}return s?r:!1}inPawnAttack(t,e,s=!1){const r=this.getOpponentColor(e);let i=0;for(const l of S.p[r]){let n=t;n=P[x[n]+l];const c=this.getPiece(n);if(c&&c.type===f.pawn&&c.color!==e){if(!s)return!0;i++}}return s?i:!1}inKingAttack(t,e,s=!1){let r=0;for(const i of S.k){let l=t;l=P[x[l]+i];const n=this.getPiece(l);if(n&&n.type===f.king&&n.color!==e){if(!s)return!0;r++}}return s?r:!1}inSlidingAttack(t,e,s=!1){const r=B.k;let i=0;for(const l of r){let n=t;for(n=P[x[n]+l];n!=-1&&n!=null;){const c=this.getPiece(n);if(c!=null){let k=B[c.type];if(c.isSlide&&c.color!==e&&k.includes(l)){if(!s)return!0;i++}break}n=P[x[n]+l]}}return s?i:!1}inAttack(t,e,s=!1){return s?this.inKnightAttack(t,e,s)+this.inPawnAttack(t,e,s)+this.inSlidingAttack(t,e,s)+this.inKingAttack(t,e,s):this.inKnightAttack(t,e)||this.inPawnAttack(t,e)||this.inSlidingAttack(t,e)||this.inKingAttack(t,e)}inCheck(t=this.currentPlayer){return this.inAttack(this.board.kings[t].index,t)}inDoubleCheck(t=this.currentPlayer){return this.inAttack(this.board.kings[t].index,t,!0)>1}perft(t){let e=0,s=0;const r=this.generatePseudoLegalMoves();for(const i of r){if(this.makeUglyMove(i),!this.inCheck())if(t-1>0){const l=this.perft(t-1);e+=l.count,s+=l.captures}else e++,i.capture&&s++;this.undoUglyMove()}return{count:e,captures:s}}getOpponentColor(t){return t===d?p:d}get boardArray(){return this.board.squares}get opponentColor(){return this.currentPlayer===d?p:d}get inThreeFold(){return this.hashHistory.length?this.hashHistory.filter(t=>t===this.zobrist.hash).length>=3:!1}get inFiftyMove(){return this.halfMoveCount>=100}get gameOver(){return!this.uglyMoves.length||this.board.pieceCount===2||this.inThreeFold||this.inFiftyMove}get winner(){return this.gameOver?this.inCheck()&&this.uglyMoves.length===0?this.currentPlayer===d?p:d:"draw":!1}get enPassant(){const t=this.fenEnPassant;return t==="-"?null:t}set enPassant(t){if(t==="-")this.enPassantIndex=null;else{const[e,s]=t.split("");this.enPassantIndex=(parseInt(s)-1)*8+(e.charCodeAt(0)-97)}}set castlingStr(t){if(this.castling[d]=0,this.castling[p]=0,t!=="-")for(const e of t.split(""))switch(e){case"K":this.castling[d]|=y;break;case"Q":this.castling[d]|=b;break;case"k":this.castling[p]|=y;break;case"q":this.castling[p]|=b;break}}get fenTurn(){return this.currentPlayer===d?"w":"b"}get fenCastling(){let t="";return t+=this.castling[d]&y?"K":"",t+=this.castling[d]&b?"Q":"",t+=this.castling[p]&y?"k":"",t+=this.castling[p]&b?"q":"",t||"-"}get fenEnPassant(){if(this.enPassantIndex===null)return"-";{const t=this.enPassantIndex%8+97,e=8-parseInt(this.enPassantIndex/8);return`${String.fromCharCode(t)}${e}`}}set fen(t){const e=t.split(" ");this.board.fenPosition=e[0],this.currentPlayer=e[1]==="w"?d:p,this.castlingStr=e[2],this.enPassant=e[3],this.halfMoveCount=parseInt(e[4]),this.moveCount=parseInt(e[5])}get fen(){return`${this.board.fenPosition} ${this.fenTurn} ${this.fenCastling} ${this.fenEnPassant} ${this.halfMoveCount} ${this.moveCount}`}get copy(){const t=new L(this.fen);return t.history=this.history.slice(),t}}class at{constructor(t){h(this,"hashes",{}),this.game=t}get hash(){return this.game.zobrist.hash}clear(){this.hashes={}}getHash(t){return t?t.zobrist.hash:this.hash}getMove(t=null){const e=this.getHash(t);return entries[e].move}getStoredHash({depth:t,alpha:e,beta:s},r=null){const i=this.getHash(r),l=this.hashes[i];return l&&t<=l.depth&&(l.type===F||l.type===V&&l.score>=s||l.type===Z&&l.score<=e)?l:null}addEvaluation(t,e=null){const s=this.getHash(e);t.hash=s,this.hashes[s]=t}}class ct{constructor(t="normal",e=1){h(this,"positionCount",0),h(this,"cutOff",0),h(this,"quiesceCount",0),h(this,"transpositionNum",0),h(this,"bestEval",null),this.type=t,this.depth=e,this.transpositionTable=new at(this.game),this.bestMove=null}selectMove(t,e){const s=(e==null?void 0:e.type)||this.type,r=(e==null?void 0:e.depth)||this.depth;if(t)this.game=new L(t);else return null;if(s==="random")return this.selectRandomMove(this.game.uglyMoves);if(s==="normal")return e!=null&&e.debug&&this.resetDebug(),this.bestMove=null,this.search(r,Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY,this.game),e!=null&&e.debug&&this.logDebug(),this.bestMove.setSAN(this.game.uglyMoves),this.bestMove.pretty}resetDebug(){this.positionCount=0,this.quiesceCount=0,this.cutOff=0,this.transpositionNum=0,this.bestEval=null}logDebug(){console.log("*************************"),console.log("eval: ",this.bestEval),console.log("searched position: ",this.positionCount),console.log("cut off count: ",this.cutOff),console.log("quiesce count: ",this.quiesceCount),console.log("transposition count: ",this.transpositionNum,Object.keys(this.transpositionTable.hashes).length)}selectRandomMove(t){return t[Math.floor(Math.random()*t.length)]}search(t,e,s,r,i=0){if(i>0&&r.hashHistory.includes(r.zobrist.hash))return 0;const l=this.transpositionTable.getStoredHash({depth:t,alpha:e,beta:s},r);if(l!==null)return this.transpositionNum++,i===0&&(this.bestMove=l.move),l.score;if(t===0)return this.positionCount++,this.quiesce(e,s,r);const n=r.generateMoves();if(n.length===0)return r.inCheck()?Number.NEGATIVE_INFINITY:0;let c=Z,k;n.sort((m,C)=>C.score-m.score);for(const m of n){r.makeUglyMove(m);let C=-this.search(t-1,-s,-e,r,i+1);if(r.undoUglyMove(),C>=s)return this.cutOff++,this.transpositionTable.addEvaluation({depth:t,move:m,score:s,type:V},r),s;C>e&&(c=F,e=C,k=m,i===0&&(this.bestEval=e,this.bestMove=k))}return this.transpositionTable.addEvaluation({depth:t,move:k,score:e,type:c},r),e}quiesce(t,e,s){this.quiesceCount++;const r=this.evaluate(s);if(r>=e)return e;t<r&&(t=r);const i=s.generateMoves({onlyCapture:!0});i.sort((l,n)=>n.score-l.score);for(const l of i){s.makeUglyMove(l);const n=-this.quiesce(-e,-t,s);if(s.undoUglyMove(),n>=e)return e;n>t&&(t=n)}return t}getEndGameWeight(t){return 1-Math.min(1,t*(1/O))}endGameEval(t,e,s,r){let i=0;const{x:l,y:n}=e.position,c=Math.max(3-l,l-4),k=Math.max(3-n,n-4);i+=c+k;const{x:C,y:z}=t.position,E=Math.abs(C-l),j=Math.abs(z-n),q=E+j;return i+=14-q,i*10*r}evaluate(t){const e=this.game||t,s=e.board,r=s.kings;let i=0,l=0;const n=this.getColorMaterial(d,s),c=this.getColorMaterial(p,s);i+=n,l+=c;const k=n-s.getColorNotPawnNum(d)*w.p,m=c-s.getColorNotPawnNum(p)*w.p,C=this.getEndGameWeight(k),z=this.getEndGameWeight(m);return i+=this.endGameEval(r.white,r.black,k,C),l+=this.endGameEval(r.black,r.white,m,z),i+=this.getPieceWeights(d,k,s),l+=this.getPieceWeights(p,m,s),(i-l)*w[e.currentPlayer]}getColorMaterial(t,e){let s=0;return e.mapColorList(t,r=>{s+=w[r.type]}),s}getPieceWeights(t,e,s){let r=0;return s.mapColorList(t,i=>{if(i.type!==f.king){r+=$[i.color][i.type][i.index];return}e>O?r+=$[i.color][i.type].middle[i.index]:r+=$[i.color][i.type].end[i.index]}),r}}var g=(a,t)=>{const e=a.__vccOpts||a;for(const[s,r]of t)e[s]=r;return e};const ht={name:"WhiteBishop",props:{size:Number}},dt=["width","height"],pt=[o.createStaticVNode('<g id="surface1"><path style="fill-rule:evenodd;fill:rgb(100%, 100%, 100%);fill-opacity:1;stroke-width:1.5;stroke-linecap:butt;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 9 36.001562 C 12.390625 35.028906 19.109375 36.43125 22.5 34.001562 C 25.890625 36.43125 32.609375 35.028906 36 36.001562 C 36 36.001562 37.648438 36.540625 39 38.001562 C 38.320312 38.970312 37.351562 38.989844 36 38.501562 C 32.609375 37.528906 25.890625 38.958594 22.5 37.501562 C 19.109375 38.958594 12.390625 37.528906 9 38.501562 C 7.648438 38.989844 6.679688 38.970312 6 38.001562 C 7.351562 36.540625 9 36.001562 9 36.001562 Z M 9 36.001562 " transform="matrix(1,0,0,1,0,0.6)"></path><path style="fill-rule:evenodd;fill:rgb(100%, 100%, 100%);fill-opacity:1;stroke-width:1.5;stroke-linecap:butt;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 15 32.001562 C 17.5 34.501562 27.5 34.501562 30 32.001562 C 30.5 30.501562 30 30.001562 30 30.001562 C 30 27.501562 27.5 26.001562 27.5 26.001562 C 33 24.501562 33.5 14.501563 22.5 10.501563 C 11.5 14.501563 12 24.501562 17.5 26.001562 C 17.5 26.001562 15 27.501562 15 30.001562 C 15 30.001562 14.5 30.501562 15 32.001562 Z M 15 32.001562 " transform="matrix(1,0,0,1,0,0.6)"></path><path style="fill-rule:evenodd;fill:rgb(100%, 100%, 100%);fill-opacity:1;stroke-width:1.5;stroke-linecap:butt;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 25 8.001563 C 25 9.380469 23.878906 10.501563 22.5 10.501563 C 21.121094 10.501563 20 9.380469 20 8.001563 C 20 6.61875 21.121094 5.501563 22.5 5.501563 C 23.878906 5.501563 25 6.61875 25 8.001563 Z M 25 8.001563 " transform="matrix(1,0,0,1,0,0.6)"></path><path style="fill:none;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:miter;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 17.5 26.001562 L 27.5 26.001562 M 15 30.001562 L 30 30.001562 M 22.5 15.501563 L 22.5 20.501562 M 20 18.001562 L 25 18.001562 " transform="matrix(1,0,0,1,0,0.6)"></path></g>',1)];function kt(a,t,e,s,r,i){return o.openBlock(),o.createElementBlock("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",width:e.size,height:e.size,viewBox:"0 0 45 45",version:"1.1"},pt,8,dt)}var ft=g(ht,[["render",kt]]);const ut={name:"WhiteKing",props:{size:Number}},gt=["width","height"],mt=[o.createStaticVNode('<g id="surface1"><path style="fill:none;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:miter;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 22.5 11.628906 L 22.5 6 "></path><path style="fill:none;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:miter;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 20 8 L 25 8 "></path><path style="fill-rule:evenodd;fill:rgb(100%, 100%, 100%);fill-opacity:1;stroke-width:1.5;stroke-linecap:butt;stroke-linejoin:miter;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 22.5 25 C 22.5 25 27 17.5 25.5 14.5 C 25.5 14.5 24.5 12 22.5 12 C 20.5 12 19.5 14.5 19.5 14.5 C 18 17.5 22.5 25 22.5 25 "></path><path style="fill-rule:evenodd;fill:rgb(100%, 100%, 100%);fill-opacity:1;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 12.5 37 C 18 40.5 27 40.5 32.5 37 L 32.5 30 C 32.5 30 41.5 25.5 38.5 19.5 C 34.5 13 25 16 22.5 23.5 L 22.5 27 L 22.5 23.5 C 20 16 10.5 13 6.5 19.5 C 3.5 25.5 12.5 30 12.5 30 L 12.5 37 "></path><path style="fill:none;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 12.5 30 C 18 27 27 27 32.5 30 "></path><path style="fill:none;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 12.5 33.5 C 18 30.5 27 30.5 32.5 33.5 "></path><path style="fill:none;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 12.5 37 C 18 34 27 34 32.5 37 "></path></g>',1)];function yt(a,t,e,s,r,i){return o.openBlock(),o.createElementBlock("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",width:e.size,height:e.size,viewBox:"0 0 45 45",version:"1.1"},mt,8,gt)}var bt=g(ut,[["render",yt]]);const wt={name:"WhiteKnight",props:{size:Number}},Ct=["width","height"],_t=[o.createStaticVNode('<g id="surface1"><path style="fill-rule:evenodd;fill:rgb(100%, 100%, 100%);fill-opacity:1;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 22 10.000781 C 32.5 11.000781 38.5 18.000781 38 39.000781 L 15 39.000781 C 15 30.000781 25 32.500781 23 18.000781 " transform="matrix(1,0,0,1,0,0.3)"></path><path style="fill-rule:evenodd;fill:rgb(100%, 100%, 100%);fill-opacity:1;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 24 18.000781 C 24.378906 20.910937 18.449219 25.371875 16 27.000781 C 13 29.000781 13.179688 31.340625 11 31.000781 C 9.957031 30.059375 12.410156 27.961719 11 28.000781 C 10 28.000781 11.191406 29.23125 10 30.000781 C 9 30.000781 5.996094 31.000781 6 26.000781 C 6 24.000781 12 14.000781 12 14.000781 C 12 14.000781 13.890625 12.098437 14 10.500781 C 13.269531 9.504687 13.5 8.500781 13.5 7.500781 C 14.5 6.500781 16.5 10.000781 16.5 10.000781 L 18.5 10.000781 C 18.5 10.000781 19.28125 8.008594 21 7.000781 C 22 7.000781 22 10.000781 22 10.000781 " transform="matrix(1,0,0,1,0,0.3)"></path><path style="fill-rule:evenodd;fill:rgb(0%, 0%, 0%);fill-opacity:1;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 9.5 25.500781 C 9.5 25.774219 9.277344 26.000781 9 26.000781 C 8.722656 26.000781 8.5 25.774219 8.5 25.500781 C 8.5 25.223437 8.722656 25.000781 9 25.000781 C 9.277344 25.000781 9.5 25.223437 9.5 25.500781 Z M 9.5 25.500781 " transform="matrix(1,0,0,1,0,0.3)"></path><path style="fill-rule:evenodd;fill:rgb(0%, 0%, 0%);fill-opacity:1;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 15.000905 15.50038 C 14.999749 16.326502 14.776004 17.001477 14.499328 16.998836 C 14.224605 16.999578 13.99872 16.327096 13.999876 15.500973 C 13.99908 14.671468 14.224777 13.999876 14.4995 13.999134 C 14.776176 14.001775 15.000108 14.670874 15.000905 15.50038 Z M 15.000905 15.50038 " transform="matrix(0.866,0.5,-0.5,0.866,9.693,-4.873)"></path></g>',1)];function Mt(a,t,e,s,r,i){return o.openBlock(),o.createElementBlock("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",width:e.size,height:e.size,viewBox:"0 0 45 45",version:"1.1"},_t,8,Ct)}var Pt=g(wt,[["render",Mt]]);const xt={name:"WhitePawn",props:{size:Number}},Lt=["width","height"],zt=[o.createElementVNode("g",{id:"surface1"},[o.createElementVNode("path",{style:{"fill-rule":"nonzero",fill:"rgb(100%, 100%, 100%)","fill-opacity":"1","stroke-width":"1.5","stroke-linecap":"round","stroke-linejoin":"miter",stroke:"rgb(0%, 0%, 0%)","stroke-opacity":"1","stroke-miterlimit":"4"},d:"M 22.5 9 C 20.289062 9 18.5 10.789062 18.5 13 C 18.5 13.890625 18.789062 14.710938 19.28125 15.378906 C 17.328125 16.5 16 18.589844 16 21 C 16 23.03125 16.941406 24.839844 18.410156 26.03125 C 15.410156 27.089844 11 31.578125 11 39.5 L 34 39.5 C 34 31.578125 29.589844 27.089844 26.589844 26.03125 C 28.058594 24.839844 29 23.03125 29 21 C 29 18.589844 27.671875 16.5 25.71875 15.378906 C 26.210938 14.710938 26.5 13.890625 26.5 13 C 26.5 10.789062 24.710938 9 22.5 9 Z M 22.5 9 "})],-1)];function Bt(a,t,e,s,r,i){return o.openBlock(),o.createElementBlock("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",width:e.size,height:e.size,viewBox:"0 0 45 45",version:"1.1"},zt,8,Lt)}var vt=g(xt,[["render",Bt]]);const Nt={name:"WhiteQueen",props:{size:Number}},It=["width","height"],St=[o.createStaticVNode('<g id="surface1"><path style="fill-rule:nonzero;fill:rgb(100%, 100%, 100%);fill-opacity:1;stroke-width:1.5;stroke-linecap:butt;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 9 26 C 17.5 24.5 30 24.5 36 26 L 38.5 13.5 L 31 25 L 30.699219 10.898438 L 25.5 24.5 L 22.5 10 L 19.5 24.5 L 14.300781 10.898438 L 14 25 L 6.5 13.5 Z M 9 26 "></path><path style="fill-rule:nonzero;fill:rgb(100%, 100%, 100%);fill-opacity:1;stroke-width:1.5;stroke-linecap:butt;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 9 26 C 9 28 10.5 28 11.5 30 C 12.5 31.5 12.5 31 12 33.5 C 10.5 34.5 11 36 11 36 C 9.5 37.5 11 38.5 11 38.5 C 17.5 39.5 27.5 39.5 34 38.5 C 34 38.5 35.5 37.5 34 36 C 34 36 34.5 34.5 33 33.5 C 32.5 31 32.5 31.5 33.5 30 C 34.5 28 36 28 36 26 C 27.5 24.5 17.5 24.5 9 26 Z M 9 26 "></path><path style="fill:none;stroke-width:1.5;stroke-linecap:butt;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 11.5 30 C 15 29 30 29 33.5 30 "></path><path style="fill:none;stroke-width:1.5;stroke-linecap:butt;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 12 33.5 C 18 32.5 27 32.5 33 33.5 "></path><path style="fill-rule:nonzero;fill:rgb(100%, 100%, 100%);fill-opacity:1;stroke-width:1.5;stroke-linecap:butt;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 8 12 C 8 13.105469 7.105469 14 6 14 C 4.894531 14 4 13.105469 4 12 C 4 10.894531 4.894531 10 6 10 C 7.105469 10 8 10.894531 8 12 Z M 8 12 "></path><path style="fill-rule:nonzero;fill:rgb(100%, 100%, 100%);fill-opacity:1;stroke-width:1.5;stroke-linecap:butt;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 16 9 C 16 10.105469 15.105469 11 14 11 C 12.894531 11 12 10.105469 12 9 C 12 7.894531 12.894531 7 14 7 C 15.105469 7 16 7.894531 16 9 Z M 16 9 "></path><path style="fill-rule:nonzero;fill:rgb(100%, 100%, 100%);fill-opacity:1;stroke-width:1.5;stroke-linecap:butt;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 24.5 8 C 24.5 9.105469 23.605469 10 22.5 10 C 21.394531 10 20.5 9.105469 20.5 8 C 20.5 6.894531 21.394531 6 22.5 6 C 23.605469 6 24.5 6.894531 24.5 8 Z M 24.5 8 "></path><path style="fill-rule:nonzero;fill:rgb(100%, 100%, 100%);fill-opacity:1;stroke-width:1.5;stroke-linecap:butt;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 33 9 C 33 10.105469 32.105469 11 31 11 C 29.894531 11 29 10.105469 29 9 C 29 7.894531 29.894531 7 31 7 C 32.105469 7 33 7.894531 33 9 Z M 33 9 "></path><path style="fill-rule:nonzero;fill:rgb(100%, 100%, 100%);fill-opacity:1;stroke-width:1.5;stroke-linecap:butt;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 41 12 C 41 13.105469 40.105469 14 39 14 C 37.894531 14 37 13.105469 37 12 C 37 10.894531 37.894531 10 39 10 C 40.105469 10 41 10.894531 41 12 Z M 41 12 "></path></g>',1)];function $t(a,t,e,s,r,i){return o.openBlock(),o.createElementBlock("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",width:e.size,height:e.size,viewBox:"0 0 45 45",version:"1.1"},St,8,It)}var Et=g(Nt,[["render",$t]]);const jt={name:"WhiteRook",props:{size:Number}},qt=["width","height"],Kt=[o.createStaticVNode('<g id="surface1"><path style="fill-rule:evenodd;fill:rgb(100%, 100%, 100%);fill-opacity:1;stroke-width:1.5;stroke-linecap:butt;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 9 39.000781 L 36 39.000781 L 36 36.000781 L 9 36.000781 Z M 9 39.000781 " transform="matrix(1,0,0,1,0,0.3)"></path><path style="fill-rule:evenodd;fill:rgb(100%, 100%, 100%);fill-opacity:1;stroke-width:1.5;stroke-linecap:butt;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 12 36.000781 L 12 32.000781 L 33 32.000781 L 33 36.000781 Z M 12 36.000781 " transform="matrix(1,0,0,1,0,0.3)"></path><path style="fill-rule:evenodd;fill:rgb(100%, 100%, 100%);fill-opacity:1;stroke-width:1.5;stroke-linecap:butt;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 11 14.000781 L 11 9.000781 L 15 9.000781 L 15 11.000781 L 20 11.000781 L 20 9.000781 L 25 9.000781 L 25 11.000781 L 30 11.000781 L 30 9.000781 L 34 9.000781 L 34 14.000781 " transform="matrix(1,0,0,1,0,0.3)"></path><path style="fill-rule:evenodd;fill:rgb(100%, 100%, 100%);fill-opacity:1;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 34 14.000781 L 31 17.000781 L 14 17.000781 L 11 14.000781 " transform="matrix(1,0,0,1,0,0.3)"></path><path style="fill-rule:evenodd;fill:rgb(100%, 100%, 100%);fill-opacity:1;stroke-width:1.5;stroke-linecap:butt;stroke-linejoin:miter;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 31 17.000781 L 31 29.500781 L 14 29.500781 L 14 17.000781 " transform="matrix(1,0,0,1,0,0.3)"></path><path style="fill-rule:evenodd;fill:rgb(100%, 100%, 100%);fill-opacity:1;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 31 29.500781 L 32.5 32.000781 L 12.5 32.000781 L 14 29.500781 " transform="matrix(1,0,0,1,0,0.3)"></path><path style="fill:none;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:miter;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 11 14.000781 L 34 14.000781 " transform="matrix(1,0,0,1,0,0.3)"></path></g>',1)];function Tt(a,t,e,s,r,i){return o.openBlock(),o.createElementBlock("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",width:e.size,height:e.size,viewBox:"0 0 45 45",version:"1.1"},Kt,8,qt)}var At=g(jt,[["render",Tt]]);const Gt={name:"BlackBishop",props:{size:Number}},Ft=["width","height"],Zt=[o.createStaticVNode('<g id="surface1"><path style="fill-rule:evenodd;fill:rgb(0%, 0%, 0%);fill-opacity:1;stroke-width:1.5;stroke-linecap:butt;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 9 36 C 12.390234 35.029687 19.109766 36.430078 22.5 33.999609 C 25.890234 36.430078 32.609766 35.029687 36 36 C 36 36 37.65 36.540234 39 38.000391 C 38.320312 38.969531 37.35 38.989453 36 38.499609 C 32.609766 37.530469 25.890234 38.960156 22.5 37.5 C 19.109766 38.960156 12.390234 37.530469 9 38.499609 C 7.65 38.989453 6.679688 38.969531 6 38.000391 C 7.35 36.540234 9 36 9 36 Z M 9 36 " transform="matrix(3.333333,0,0,3.333333,0,2)"></path><path style="fill-rule:evenodd;fill:rgb(0%, 0%, 0%);fill-opacity:1;stroke-width:1.5;stroke-linecap:butt;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 15 32.000391 C 17.499609 34.5 27.500391 34.5 30 32.000391 C 30.500391 30.500391 30 30 30 30 C 30 27.500391 27.500391 26.000391 27.500391 26.000391 C 33 24.500391 33.500391 14.499609 22.5 10.5 C 11.499609 14.499609 12 24.500391 17.499609 26.000391 C 17.499609 26.000391 15 27.500391 15 30 C 15 30 14.499609 30.500391 15 32.000391 Z M 15 32.000391 " transform="matrix(3.333333,0,0,3.333333,0,2)"></path><path style="fill-rule:evenodd;fill:rgb(0%, 0%, 0%);fill-opacity:1;stroke-width:1.5;stroke-linecap:butt;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 24.999609 8.000391 C 24.999609 9.380859 23.880469 10.5 22.5 10.5 C 21.119531 10.5 20.000391 9.380859 20.000391 8.000391 C 20.000391 6.61875 21.119531 5.499609 22.5 5.499609 C 23.880469 5.499609 24.999609 6.61875 24.999609 8.000391 Z M 24.999609 8.000391 " transform="matrix(3.333333,0,0,3.333333,0,2)"></path><path style="fill:none;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:miter;stroke:rgb(100%, 100%, 100%);stroke-opacity:1;stroke-miterlimit:4;" d="M 17.499609 26.000391 L 27.500391 26.000391 M 15 30 L 30 30 M 22.5 15.500391 L 22.5 20.499609 M 20.000391 18 L 24.999609 18 " transform="matrix(3.333333,0,0,3.333333,0,2)"></path></g>',1)];function Vt(a,t,e,s,r,i){return o.openBlock(),o.createElementBlock("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",width:e.size,height:e.size,viewBox:"0 0 150 150",version:"1.1"},Zt,8,Ft)}var Ot=g(Gt,[["render",Vt]]);const Wt={name:"BlackKing",props:{size:Number}},Ut=["width","height"],Ht=[o.createStaticVNode('<g id="surface1"><path style="fill:none;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:miter;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 22.5 11.628906 L 22.5 6 "></path><path style="fill-rule:evenodd;fill:rgb(0%, 0%, 0%);fill-opacity:1;stroke-width:1.5;stroke-linecap:butt;stroke-linejoin:miter;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 22.5 25 C 22.5 25 27 17.5 25.5 14.5 C 25.5 14.5 24.5 12 22.5 12 C 20.5 12 19.5 14.5 19.5 14.5 C 18 17.5 22.5 25 22.5 25 "></path><path style="fill-rule:evenodd;fill:rgb(0%, 0%, 0%);fill-opacity:1;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 12.5 37 C 18 40.5 27 40.5 32.5 37 L 32.5 30 C 32.5 30 41.5 25.5 38.5 19.5 C 34.5 13 25 16 22.5 23.5 L 22.5 27 L 22.5 23.5 C 20 16 10.5 13 6.5 19.5 C 3.5 25.5 12.5 30 12.5 30 L 12.5 37 "></path><path style="fill:none;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:miter;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 20 8 L 25 8 "></path><path style="fill:none;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(100%, 100%, 100%);stroke-opacity:1;stroke-miterlimit:4;" d="M 32 29.5 C 32 29.5 40.5 25.5 38.03125 19.851562 C 34.148438 14 25 18 22.5 24.5 L 22.5 26.601562 L 22.5 24.5 C 20 18 10.851562 14 6.96875 19.851562 C 4.5 25.5 13 29.5 13 29.5 "></path><path style="fill:none;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(100%, 100%, 100%);stroke-opacity:1;stroke-miterlimit:4;" d="M 12.5 30 C 18 27 27 27 32.5 30 M 12.5 33.5 C 18 30.5 27 30.5 32.5 33.5 M 12.5 37 C 18 34 27 34 32.5 37 "></path></g>',1)];function Dt(a,t,e,s,r,i){return o.openBlock(),o.createElementBlock("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",width:e.size,height:e.size,viewBox:"0 0 45 45",version:"1.1"},Ht,8,Ut)}var Qt=g(Wt,[["render",Dt]]);const Rt={name:"BlackKnight",props:{size:Number}},Yt=["width","height"],Xt=[o.createStaticVNode('<g id="surface1"><path style="fill-rule:evenodd;fill:rgb(0%, 0%, 0%);fill-opacity:1;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 22 10.000781 C 32.5 11.000781 38.5 18.000781 38 39.000781 L 15 39.000781 C 15 30.000781 25 32.500781 23 18.000781 " transform="matrix(1,0,0,1,0,0.3)"></path><path style="fill-rule:evenodd;fill:rgb(0%, 0%, 0%);fill-opacity:1;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 24 18.000781 C 24.378906 20.910937 18.449219 25.371875 16 27.000781 C 13 29.000781 13.179688 31.340625 11 31.000781 C 9.957031 30.059375 12.410156 27.961719 11 28.000781 C 10 28.000781 11.191406 29.23125 10 30.000781 C 9 30.000781 5.996094 31.000781 6 26.000781 C 6 24.000781 12 14.000781 12 14.000781 C 12 14.000781 13.890625 12.098437 14 10.500781 C 13.269531 9.504687 13.5 8.500781 13.5 7.500781 C 14.5 6.500781 16.5 10.000781 16.5 10.000781 L 18.5 10.000781 C 18.5 10.000781 19.28125 8.008594 21 7.000781 C 22 7.000781 22 10.000781 22 10.000781 " transform="matrix(1,0,0,1,0,0.3)"></path><path style="fill-rule:evenodd;fill:rgb(100%, 100%, 100%);fill-opacity:1;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(100%, 100%, 100%);stroke-opacity:1;stroke-miterlimit:4;" d="M 9.5 25.500781 C 9.5 25.774219 9.277344 26.000781 9 26.000781 C 8.722656 26.000781 8.5 25.774219 8.5 25.500781 C 8.5 25.223437 8.722656 25.000781 9 25.000781 C 9.277344 25.000781 9.5 25.223437 9.5 25.500781 Z M 9.5 25.500781 " transform="matrix(1,0,0,1,0,0.3)"></path><path style="fill-rule:evenodd;fill:rgb(100%, 100%, 100%);fill-opacity:1;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(100%, 100%, 100%);stroke-opacity:1;stroke-miterlimit:4;" d="M 15.000905 15.50038 C 14.999749 16.326502 14.776004 17.001477 14.499328 16.998836 C 14.224605 16.999578 13.99872 16.327096 13.999876 15.500973 C 13.99908 14.671468 14.224777 13.999876 14.4995 13.999134 C 14.776176 14.001775 15.000108 14.670874 15.000905 15.50038 Z M 15.000905 15.50038 " transform="matrix(0.866,0.5,-0.5,0.866,9.693,-4.873)"></path><path style="stroke:none;fill-rule:evenodd;fill:rgb(100%, 100%, 100%);fill-opacity:1;" d="M 24.550781 10.699219 L 24.101562 12.148438 L 24.601562 12.300781 C 27.75 13.300781 30.25 14.789062 32.5 19.050781 C 34.75 23.308594 35.75 29.359375 35.25 39.300781 L 35.199219 39.800781 L 37.449219 39.800781 L 37.5 39.300781 C 38 29.238281 36.621094 22.449219 34.25 17.960938 C 31.878906 13.46875 28.460938 11.320312 25.058594 10.800781 Z M 24.550781 10.699219 "></path></g>',1)];function Jt(a,t,e,s,r,i){return o.openBlock(),o.createElementBlock("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",width:e.size,height:e.size,viewBox:"0 0 45 45",version:"1.1"},Xt,8,Yt)}var te=g(Rt,[["render",Jt]]);const ee={name:"BlackPawn",props:{size:Number}},ie=["width","height"],se=[o.createElementVNode("g",{id:"surface1"},[o.createElementVNode("path",{style:{"fill-rule":"nonzero",fill:"rgb(0%, 0%, 0%)","fill-opacity":"1","stroke-width":"1.5","stroke-linecap":"round","stroke-linejoin":"miter",stroke:"rgb(0%, 0%, 0%)","stroke-opacity":"1","stroke-miterlimit":"4"},d:"M 22.5 9 C 20.289062 9 18.5 10.789062 18.5 13 C 18.5 13.890625 18.789062 14.710938 19.28125 15.378906 C 17.328125 16.5 16 18.589844 16 21 C 16 23.03125 16.941406 24.839844 18.410156 26.03125 C 15.410156 27.089844 11 31.578125 11 39.5 L 34 39.5 C 34 31.578125 29.589844 27.089844 26.589844 26.03125 C 28.058594 24.839844 29 23.03125 29 21 C 29 18.589844 27.671875 16.5 25.71875 15.378906 C 26.210938 14.710938 26.5 13.890625 26.5 13 C 26.5 10.789062 24.710938 9 22.5 9 Z M 22.5 9 "})],-1)];function oe(a,t,e,s,r,i){return o.openBlock(),o.createElementBlock("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",width:e.size,height:e.size,viewBox:"0 0 45 45",version:"1.1"},se,8,ie)}var re=g(ee,[["render",oe]]);const ne={name:"BlackQueen",props:{size:Number}},le=["width","height"],ae=[o.createStaticVNode('<g id="surface1"><path style="fill-rule:nonzero;fill:rgb(0%, 0%, 0%);fill-opacity:1;stroke-width:1.5;stroke-linecap:butt;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 9 26 C 17.5 24.5 30 24.5 36 26 L 38.5 13.5 L 31 25 L 30.699219 10.898438 L 25.5 24.5 L 22.5 10 L 19.5 24.5 L 14.300781 10.898438 L 14 25 L 6.5 13.5 Z M 9 26 "></path><path style="fill-rule:nonzero;fill:rgb(0%, 0%, 0%);fill-opacity:1;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 9 26 C 9 28 10.5 28 11.5 30 C 12.5 31.5 12.5 31 12 33.5 C 10.5 34.5 11 36 11 36 C 9.5 37.5 11 38.5 11 38.5 C 17.5 39.5 27.5 39.5 34 38.5 C 34 38.5 35.5 37.5 34 36 C 34 36 34.5 34.5 33 33.5 C 32.5 31 32.5 31.5 33.5 30 C 34.5 28 36 28 36 26 C 27.5 24.5 17.5 24.5 9 26 Z M 9 26 "></path><path style="fill-rule:nonzero;fill:rgb(0%, 0%, 0%);fill-opacity:1;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 11.5 30 C 15 29 30 29 33.5 30 "></path><path style="fill-rule:nonzero;fill:rgb(0%, 0%, 0%);fill-opacity:1;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 12 33.5 C 18 32.5 27 32.5 33 33.5 "></path><path style="fill-rule:nonzero;fill:rgb(0%, 0%, 0%);fill-opacity:1;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 8 12 C 8 13.105469 7.105469 14 6 14 C 4.894531 14 4 13.105469 4 12 C 4 10.894531 4.894531 10 6 10 C 7.105469 10 8 10.894531 8 12 Z M 8 12 "></path><path style="fill-rule:nonzero;fill:rgb(0%, 0%, 0%);fill-opacity:1;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 16 9 C 16 10.105469 15.105469 11 14 11 C 12.894531 11 12 10.105469 12 9 C 12 7.894531 12.894531 7 14 7 C 15.105469 7 16 7.894531 16 9 Z M 16 9 "></path><path style="fill-rule:nonzero;fill:rgb(0%, 0%, 0%);fill-opacity:1;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 24.5 8 C 24.5 9.105469 23.605469 10 22.5 10 C 21.394531 10 20.5 9.105469 20.5 8 C 20.5 6.894531 21.394531 6 22.5 6 C 23.605469 6 24.5 6.894531 24.5 8 Z M 24.5 8 "></path><path style="fill-rule:nonzero;fill:rgb(0%, 0%, 0%);fill-opacity:1;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 33 9 C 33 10.105469 32.105469 11 31 11 C 29.894531 11 29 10.105469 29 9 C 29 7.894531 29.894531 7 31 7 C 32.105469 7 33 7.894531 33 9 Z M 33 9 "></path><path style="fill-rule:nonzero;fill:rgb(0%, 0%, 0%);fill-opacity:1;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 41 12 C 41 13.105469 40.105469 14 39 14 C 37.894531 14 37 13.105469 37 12 C 37 10.894531 37.894531 10 39 10 C 40.105469 10 41 10.894531 41 12 Z M 41 12 "></path><path style="fill:none;stroke-width:1.5;stroke-linecap:butt;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 11 38.5 C 18.449219 41.089844 26.550781 41.089844 34 38.5 "></path><path style="fill:none;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(100%, 100%, 100%);stroke-opacity:1;stroke-miterlimit:4;" d="M 11 29 C 18.449219 26.410156 26.550781 26.410156 34 29 "></path><path style="fill:none;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(100%, 100%, 100%);stroke-opacity:1;stroke-miterlimit:4;" d="M 12.5 31.5 L 32.5 31.5 "></path><path style="fill:none;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(100%, 100%, 100%);stroke-opacity:1;stroke-miterlimit:4;" d="M 11.5 34.5 C 18.644531 36.863281 26.355469 36.863281 33.5 34.5 "></path><path style="fill:none;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(100%, 100%, 100%);stroke-opacity:1;stroke-miterlimit:4;" d="M 10.5 37.5 C 18.25 40.328125 26.75 40.328125 34.5 37.5 "></path></g>',1)];function ce(a,t,e,s,r,i){return o.openBlock(),o.createElementBlock("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",width:e.size,height:e.size,viewBox:"0 0 45 45",version:"1.1"},ae,8,le)}var he=g(ne,[["render",ce]]);const de={name:"BlackRook",props:{size:Number}},pe=["width","height"],ke=[o.createStaticVNode('<g id="surface1"><path style="fill-rule:evenodd;fill:rgb(0%, 0%, 0%);fill-opacity:1;stroke-width:1.5;stroke-linecap:butt;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 9 39.000781 L 36 39.000781 L 36 36.000781 L 9 36.000781 Z M 9 39.000781 " transform="matrix(1,0,0,1,0,0.3)"></path><path style="fill-rule:evenodd;fill:rgb(0%, 0%, 0%);fill-opacity:1;stroke-width:1.5;stroke-linecap:butt;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 12.5 32.000781 L 14 29.500781 L 31 29.500781 L 32.5 32.000781 Z M 12.5 32.000781 " transform="matrix(1,0,0,1,0,0.3)"></path><path style="fill-rule:evenodd;fill:rgb(0%, 0%, 0%);fill-opacity:1;stroke-width:1.5;stroke-linecap:butt;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 12 36.000781 L 12 32.000781 L 33 32.000781 L 33 36.000781 Z M 12 36.000781 " transform="matrix(1,0,0,1,0,0.3)"></path><path style="fill-rule:evenodd;fill:rgb(0%, 0%, 0%);fill-opacity:1;stroke-width:1.5;stroke-linecap:butt;stroke-linejoin:miter;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 14 29.500781 L 14 16.500781 L 31 16.500781 L 31 29.500781 Z M 14 29.500781 " transform="matrix(1,0,0,1,0,0.3)"></path><path style="fill-rule:evenodd;fill:rgb(0%, 0%, 0%);fill-opacity:1;stroke-width:1.5;stroke-linecap:butt;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 14 16.500781 L 11 14.000781 L 34 14.000781 L 31 16.500781 Z M 14 16.500781 " transform="matrix(1,0,0,1,0,0.3)"></path><path style="fill-rule:evenodd;fill:rgb(0%, 0%, 0%);fill-opacity:1;stroke-width:1.5;stroke-linecap:butt;stroke-linejoin:round;stroke:rgb(0%, 0%, 0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 11 14.000781 L 11 9.000781 L 15 9.000781 L 15 11.000781 L 20 11.000781 L 20 9.000781 L 25 9.000781 L 25 11.000781 L 30 11.000781 L 30 9.000781 L 34 9.000781 L 34 14.000781 Z M 11 14.000781 " transform="matrix(1,0,0,1,0,0.3)"></path><path style="fill:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:miter;stroke:rgb(100%, 100%, 100%);stroke-opacity:1;stroke-miterlimit:4;" d="M 12 35.500781 L 33 35.500781 " transform="matrix(1,0,0,1,0,0.3)"></path><path style="fill:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:miter;stroke:rgb(100%, 100%, 100%);stroke-opacity:1;stroke-miterlimit:4;" d="M 13 31.500781 L 32 31.500781 " transform="matrix(1,0,0,1,0,0.3)"></path><path style="fill:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:miter;stroke:rgb(100%, 100%, 100%);stroke-opacity:1;stroke-miterlimit:4;" d="M 14 29.500781 L 31 29.500781 " transform="matrix(1,0,0,1,0,0.3)"></path><path style="fill:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:miter;stroke:rgb(100%, 100%, 100%);stroke-opacity:1;stroke-miterlimit:4;" d="M 14 16.500781 L 31 16.500781 " transform="matrix(1,0,0,1,0,0.3)"></path><path style="fill:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:miter;stroke:rgb(100%, 100%, 100%);stroke-opacity:1;stroke-miterlimit:4;" d="M 11 14.000781 L 34 14.000781 " transform="matrix(1,0,0,1,0,0.3)"></path></g>',1)];function fe(a,t,e,s,r,i){return o.openBlock(),o.createElementBlock("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",width:e.size,height:e.size,viewBox:"0 0 45 45",version:"1.1"},ke,8,pe)}var ue=g(de,[["render",fe]]);const ge={name:"ChessPiece",components:{WhiteBishop:ft,WhiteKing:bt,WhiteKnight:Pt,WhitePawn:vt,WhiteQueen:Et,WhiteRook:At,BlackBishop:Ot,BlackKing:Qt,BlackKnight:te,BlackPawn:re,BlackQueen:he,BlackRook:ue},props:["piece","size"],computed:{pieceName(){return this.piece.color+"/"+this.piece.pieceName},pieceSize(){return this.size*.11}}};function me(a,t,e,s,r,i){const l=o.resolveComponent("white-bishop"),n=o.resolveComponent("white-king"),c=o.resolveComponent("white-knight"),k=o.resolveComponent("white-pawn"),m=o.resolveComponent("white-queen"),C=o.resolveComponent("white-rook"),z=o.resolveComponent("black-bishop"),E=o.resolveComponent("black-king"),j=o.resolveComponent("black-knight"),q=o.resolveComponent("black-pawn"),Ne=o.resolveComponent("black-queen"),Ie=o.resolveComponent("black-rook");return i.pieceName==="white/bishop"?(o.openBlock(),o.createBlock(l,{key:0,size:i.pieceSize},null,8,["size"])):i.pieceName==="white/king"?(o.openBlock(),o.createBlock(n,{key:1,size:i.pieceSize},null,8,["size"])):i.pieceName==="white/knight"?(o.openBlock(),o.createBlock(c,{key:2,size:i.pieceSize},null,8,["size"])):i.pieceName==="white/pawn"?(o.openBlock(),o.createBlock(k,{key:3,size:i.pieceSize},null,8,["size"])):i.pieceName==="white/queen"?(o.openBlock(),o.createBlock(m,{key:4,size:i.pieceSize},null,8,["size"])):i.pieceName==="white/rook"?(o.openBlock(),o.createBlock(C,{key:5,size:i.pieceSize},null,8,["size"])):i.pieceName==="black/bishop"?(o.openBlock(),o.createBlock(z,{key:6,size:i.pieceSize},null,8,["size"])):i.pieceName==="black/king"?(o.openBlock(),o.createBlock(E,{key:7,size:i.pieceSize},null,8,["size"])):i.pieceName==="black/knight"?(o.openBlock(),o.createBlock(j,{key:8,size:i.pieceSize},null,8,["size"])):i.pieceName==="black/pawn"?(o.openBlock(),o.createBlock(q,{key:9,size:i.pieceSize},null,8,["size"])):i.pieceName==="black/queen"?(o.openBlock(),o.createBlock(Ne,{key:10,size:i.pieceSize},null,8,["size"])):i.pieceName==="black/rook"?(o.openBlock(),o.createBlock(Ie,{key:11,size:i.pieceSize},null,8,["size"])):o.createCommentVNode("",!0)}var ye=g(ge,[["render",me]]),Oe="";const be={name:"Board",data(){return{render:!1}},props:{size:Number,game:Object,isActivePiece:Function,blackFaceUp:Boolean},emits:["selectPiece","isActivePiece"],watch:{"game.fen":{handler(){this.render=!this.render}}},methods:{getPiece(a,t){return this.blackFaceUp?this.game.getPiece(9-a,9-t):this.game.getPiece(a,t)}},components:{ChessPiece:ye}},we=["onClick"],Ce={class:"board-positions"},_e={class:"board-positions letter"};function Me(a,t,e,s,r,i){const l=o.resolveComponent("chess-piece");return o.openBlock(),o.createElementBlock(o.Fragment,null,[(o.openBlock(),o.createElementBlock(o.Fragment,null,o.renderList(8,n=>(o.openBlock(),o.createElementBlock(o.Fragment,null,[(o.openBlock(),o.createElementBlock(o.Fragment,null,o.renderList(8,c=>o.createElementVNode("div",{key:n*c,class:o.normalizeClass(["square",c%2===n%2?"light-square":"dark-square"])},[i.getPiece(c,n)?(o.openBlock(),o.createElementBlock("div",{key:0,class:o.normalizeClass(e.isActivePiece(i.getPiece(c,n))?"piece active-piece":"piece"),onClick:k=>a.$emit("selectPiece",i.getPiece(c,n))},[o.createVNode(l,{size:e.size,piece:i.getPiece(c,n)},null,8,["size","piece"])],10,we)):o.createCommentVNode("",!0)],2)),64))],64))),64)),o.createElementVNode("div",Ce,[(o.openBlock(),o.createElementBlock(o.Fragment,null,o.renderList(8,n=>o.createElementVNode("div",{key:n,class:o.normalizeClass(["number no-select",n%2===1?"dark":"light"]),style:o.normalizeStyle({fontSize:`${e.size*.02}px`})},o.toDisplayString(e.blackFaceUp?n:9-n),7)),64))]),o.createElementVNode("div",_e,[(o.openBlock(),o.createElementBlock(o.Fragment,null,o.renderList(8,n=>o.createElementVNode("div",{key:n,class:o.normalizeClass(["letters no-select",n%2===0?"dark":"light"]),style:o.normalizeStyle({fontSize:`${e.size*.02}px`})},o.toDisplayString(e.blackFaceUp?String.fromCharCode(96+(9-n)):String.fromCharCode(96+n)),7)),64))])],64)}var Pe=g(be,[["render",Me],["__scopeId","data-v-1d2bfbbc"]]),We="";const xe={name:"ChessBoard",data(){return{defaultGame:new L,validMoves:[],selectedPiece:null,render:!1}},props:{fen:{type:String,default:N},size:{type:Number,default:800},game:{type:Object},disableWhiteMoves:{type:Boolean,default:!1},disableBlackMoves:{type:Boolean,default:!1},blackFaceUp:{type:Boolean,default:!1}},emits:["onMovePlayed","onGameOver","update:fen"],components:{BoardGround:Pe},computed:{chessGame(){return this.game||this.defaultGame}},watch:{fen(a){this.chessGame.fen!==a&&this.chessGame.loadGameWithFen(a||N)},"chessGame.fen":{handler(a){this.$emit("update:fen",a),this.chessGame.gameOver&&this.$emit("onGameOver",{winner:this.chessGame.winner,game:this.chessGame})}},game(){this.selectedPiece=null,this.validMoves=[],this.defaultGame=new L}},created(){this.chessGame.loadGameWithFen(this.fen||N)},methods:{isActivePiece(a){return this.chessGame.gameOver||this.disableWhiteMoves&&this.chessGame.currentPlayer===X||this.disableBlackMoves&&this.chessGame.currentPlayer===J?!1:a&&a.color===this.chessGame.currentPlayer},selectPiece(a){!this.isActivePiece(a)||this.chessGame.gameOver||(this.selectedPiece=a,this.validMoves=this.chessGame.getPieceMoves(a))},makeMove(a){this.validMoves=[],this.selectedPiece=null,this.$emit("onMovePlayed",{move:a,game:this.chessGame})},getMoveStyle(a){if(a.promotion&&a.promotion!=="q")return{display:"none"};let{x:t,y:e}=a.targetPosition;return this.blackFaceUp&&(t=7-t,e=7-e),{transform:`translate(${t*100}%,${e*100}% `}}}},Le={class:"board-positions valid-moves"},ze=["onClick"];function Be(a,t,e,s,r,i){const l=o.resolveComponent("board-ground");return o.openBlock(),o.createElementBlock("div",null,[o.createElementVNode("div",{class:"board",style:o.normalizeStyle({width:`${e.size}px`,height:`${e.size}px`})},[o.createVNode(l,{game:i.chessGame,size:e.size,onSelectPiece:i.selectPiece,isActivePiece:i.isActivePiece,blackFaceUp:e.blackFaceUp},null,8,["game","size","onSelectPiece","isActivePiece","blackFaceUp"]),o.createElementVNode("div",Le,[(o.openBlock(!0),o.createElementBlock(o.Fragment,null,o.renderList(r.validMoves,(n,c)=>(o.openBlock(),o.createElementBlock("div",{key:c,class:"valid-move",style:o.normalizeStyle(i.getMoveStyle(n)),onClick:k=>i.makeMove(n)},null,12,ze))),128))])],4)])}var ve=g(xe,[["render",Be],["__scopeId","data-v-25e6138c"]]);_.ChessAI=ct,_.ChessBoard=ve,_.ChessGame=L,Object.defineProperties(_,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});
